{"version":3,"sources":["Firebase/firebase.js","layouts/header.js","helpers/db.js","authentication/Login.js","authentication/SignUp.js","images/kkulogo.png","screens/SignIn.js","models/customer.js","data/customerData.js","screens/ConfirmDialog.js","sendEmail/sendEmail.js","sendEmail/sendFailedEmail.js","screens/Customer.js","screens/History.js","screens/HistoryDate.js","screens/CustomerAfter.js","screens/AppointDone.js","screens/AppointDoneAfter.js","screens/EditDefault.js","images/error.png","screens/Errorpage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","drawerWidth","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","easeOut","enteringScreen","marginRight","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","PersistentDrawerLeft","useTheme","React","setOpen","handleDrawerClose","Box","position","Toolbar","Typography","variant","noWrap","component","style","fontWeight","flexGrow","to","color","IconButton","edge","onClick","sx","Drawer","flexShrink","anchor","onEscapeKeyDown","onBackdropClick","direction","Divider","List","ListItem","backgroundColor","auth","signOut","makeStyles","paper","marginTop","flexDirection","avatar","margin","form","submit","background","card","paddingLeft","paddingRight","paddingBottom","pointer","cursor","Title","SignIn","props","className","src","kkulogo","alt","borderRadius","type","border","height","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","data","storetoken","username","displayName","email","imageurl","photoURL","userId","uid","firestore","collection","doc","set","localStorage","setItem","JSON","stringify","signin","catch","error","code","errorMessage","message","console","log","Customer","id","name","bdate","ssn","phone","place","date","time","detail","status","this","getCustomersAdmin","a","orderBy","response","get","array","forEach","customer","push","getAdminMorning","getAdminAfter","getCustomersAppoint","getCustomersAppointAfter","addCustomerAppoint","appointment","getCustomer","getCustomerApp","deleteCustomerAdmin","delete","deleteCustomerMorn","deleteCustomerAfter","deleteCustomerAppoint","ConfirmDialog","Dialog","onClose","close","DialogTitle","DialogContent","DialogActions","Button","init","sendconfEmail","e","preventDefault","confParams","to_name","toString","from_name","emailjs","send","text","sendFailedEmail","failedParams","useStyles","table","minWidth","container","title","flex","head","palette","common","black","white","button","float","Customers","classes","useState","setCustomers","customersMorn","setCustomersMorn","customersAfter","setCustomersAfter","customersUser","setCustomersUser","loading","setLoading","conOpen","setConOpen","subOpen","setSubOpen","doneOpen","setDoneOpen","formMode","allReserveMorn","setAllReserveMorn","custId","setName","setPhone","setEmail","setDate","setTime","setStatus","value","setValue","override","handleClose","getlist","list","listMorn","listAfter","length","toast","setCustomerAfter","getlistUser","getCustomersUser","listUser","getSubmitUser","addCustomerHandler","map","custUser","updateCustomerUser","res","update","deleteHistory","cust","docu","getLoading","useEffect","CustomerDialog","fullWidth","maxWidth","Grid","item","xs","sm","md","fontSize","icon","Close","ConfirmDelete","onSubmit","ConfirmSubmit","css","size","pading","TableContainer","Paper","alignContent","Delete","BottomNavigation","showLabels","onChange","event","newValue","BottomNavigationAction","label","Table","alignSelf","TableHead","TableRow","TableCell","TableBody","colSpan","index","formmode","changeName","target","changePhone","changeEmail","changePlace","changeTime","changeStatus","addCustomer","onSub","History","setAllReserveAfter","allList","deleteHandler","success","deleteHandlerUser","deleteCustomerUser","sessionStorage","histoDate","confirmClick","disablePadding","ListItemButton","ListItemText","primary","descendingComparator","b","getComparator","order","stableSort","comparator","stabilizedThis","el","sort","headCells","numeric","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","checked","inputProps","headCell","align","textAlign","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","getCustomersSearch","where","getSearch","handleClick","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","InputBase","ml","test","placeholder","p","mb","newSelecteds","n","property","row","isItemSelected","isSelected","labelId","hover","role","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","control","Switch","allReserveAfter","alignment","setAlignment","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","window","location","reload","AppointDone","customersApp","setCustomersApp","setFormMode","allReserve","setAllReserve","setCustId","setSsn","setPlace","setDetail","setBirth","listApp","getOneCustomer","changeSsn","changeDate","changeDetail","EditDefault","baseURL","toggleCalendar","setToggleCalendar","weekends","enableWeekends","userMaxCap","setUserCap","morningStartTime","setMorningStartTime","morningEndTime","setMorningEndTime","eveningStartTime","setEveningStartTime","eveningEndTime","setEveningEndTime","confirmSettings","setConfirmSettings","ConfirmClick","options","method","url","headers","settings","daysOfWeek","startTime","endTime","axios","patch","store","addNotification","insert","animationIn","animationOut","dismiss","onScreen","sendSettings","Container","marginBottom","TextField","defaultValue","InputLabelProps","shrink","step","evt","required","RadioGroup","marginLeft","Radio","confirmAlert","childrenElement","buttons","closeOnEscape","closeOnClickOutside","customUI","paddingTop","Errorpage","boxShadow","Routers","exact","path","AppointDoneAfter","App","isUserSignedIn","setIsUserSignedIn","onAuthStateChanged","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0580cf8d.chunk.js","sourcesContent":["import firebase from 'firebase/compat'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export {firebase};","import * as React from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport '../assets/css/confirm.css'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n  })(({ theme, open }) => ({\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: drawerWidth,\r\n    }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n}));\r\n\r\nfunction PersistentDrawerLeft() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const signOut = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n    return (\r\n        <Box>\r\n        <AppBar position=\"static\" open={open}>\r\n            <Toolbar>\r\n            <Typography variant=\"h4\" noWrap component=\"div\" style={{fontWeight:'bold', flexGrow: 1}}><Link to=\"/admin\" style={{color:'white'}}>\r\n                KKUL Admin    </Link>\r\n            </Typography>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"end\"\r\n                onClick={handleDrawerOpen}\r\n                sx={{ ...(open && { display: 'none' }) }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n            sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            '& .MuiDrawer-paper': {\r\n                width: drawerWidth,\r\n            },\r\n            }}\r\n            variant=\"temporary\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            onEscapeKeyDown={handleDrawerClose}\r\n            onBackdropClick={handleDrawerClose}\r\n        >\r\n            <DrawerHeader>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            <List>\r\n                <Link to=\"/admin\" onClick={() => handleDrawerClose()}><ListItem style={{backgroundColor:'#E8E8E8'}}>{'รอการตรวจสอบ'}</ListItem></Link>\r\n                <Link to=\"/history\" onClick={() => handleDrawerClose()}><ListItem>{'ประวัติการจอง'}</ListItem></Link>\r\n                <Link to=\"/edit_default\" onClick={() => handleDrawerClose()}><ListItem style={{backgroundColor:'#E8E8E8'}}>{'แก้ไขการจอง'}</ListItem></Link>\r\n                <Link to=\"/\" onClick={() => signOut()}><ListItem>{'ออกจากระบบ'}</ListItem></Link>\r\n            </List>\r\n        </Drawer>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default PersistentDrawerLeft;","import firebase from 'firebase/compat';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n};\r\n    \r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default fire;","import React, { useState } from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, FormControlLabel,\r\n    Button, Checkbox, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport { LockRounded } from '@material-ui/icons';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/db';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport {ScaleLoader} from 'react-spinners';\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberme, setRememberMe] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const override = `\r\n        display: block;\r\n        margin-left: 100px;\r\n        border-color: red;\r\n    `;\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleCheck = (event) => {\r\n        setRememberMe(event.target.checked);\r\n    }\r\n    const handlerLogin = () => {\r\n        setLoading(true);\r\n        fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                const {user} =  response;\r\n                const data = {\r\n                    userId: user.uid,\r\n                    email: user.email\r\n                }\r\n                var users = fire.firestore().collection(\"users\").doc(user.uid);\r\n                users.set({\r\n                    email: user.email,\r\n                    id: user.uid\r\n                })\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n                const storage = localStorage.getItem('user');\r\n                const loggedInUser = storage !== null ? JSON.parse(storage) : null;\r\n                props.loggedIn(loggedInUser);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                toast.error(error.message);\r\n                setLoading(false);\r\n            });\r\n}\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer/>\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign In\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handlerLogin}\r\n                            onError={errors => {\r\n                                for (const err of errors) {\r\n                                    console.log(err.props.errorMessages[0])\r\n                                }\r\n                            }}\r\n\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off' />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value={rememberme} onChange={(e) => handleCheck(e)} color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            {loading ? (\r\n                                <ScaleLoader\r\n                                css={override}\r\n                                size={150}\r\n                                color={\"#eb4034\"}\r\n                                loading={loading}/>\r\n                            ) : (\r\n                                    <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                Sign In\r\n                            </Button>\r\n                            )}\r\n                            \r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%'\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}));\r\n\r\nexport default Login;","import React, {useEffect, useState} from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, \r\n    Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport {LockRounded} from '@material-ui/icons';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport fire from '../helpers/db';\r\nimport firebase from '../helpers/db';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleConfirmPassowerd = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    \r\n    const handleSignUp = () => {\r\n        fire.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                if(response) {\r\n                    props.toggle();\r\n                    toast.success('User Registered Successfully');                    \r\n                }\r\n            }).catch((error) => {\r\n                switch (error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        toast.error(error.message);\r\n                        break;\r\n                    case 'auth/invalid-email': \r\n                        toast.error(error.message);                    \r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        toast.error(error.message);\r\n                        break;\r\n                }\r\n            });      \r\n    }\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if(value !== password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        }\r\n    }, [password])\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handleSignUp}\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off'\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm password\"\r\n                                fullWidth\r\n                                onChange={handleConfirmPassowerd}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Already have an account? Sign In\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        '@media(minWidth: 568px)' : {\r\n        },\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%',\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}))\r\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/kkulogo.cb762e90.png\";","import React from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport { Typography } from 'antd';\r\nimport kkulogo from '../images/kkulogo.png';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nconst SignIn = (props) => {\r\n  const SignInWithFirebase = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            const token = result.credential.accessToken;\r\n            const user = result.user;\r\n            const data = {\r\n                storetoken: token,\r\n                username: user.displayName,\r\n                email: user.email,\r\n                imageurl: user.photoURL,\r\n                userId: user.uid\r\n            }\r\n            var users = firebase.firestore().collection(\"users\").doc(user.email);\r\n                users.set({\r\n                    email: user.email,\r\n            })\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            props.signin(data);\r\n        }).catch((error) => {\r\n            const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = error.credential;\r\n          console.log(errorMessage);\r\n        });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginLogoContainer\">\r\n          <img className=\"loginlogo\" src={kkulogo} alt=\"kkulogo\"/>\r\n        </div>\r\n        <div className=\"loginTitleContainer\">\r\n          <Title>สำนักหอสมุด <br></br> มหาวิทยาลัยขอนแก่น</Title>\r\n        </div>\r\n        <div \r\n            style={{\r\n              width: \"95%\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n        >\r\n          <Link to=\"/admin\">\r\n        <button\r\n          type=\"primary\"\r\n          style={{\r\n            color: 'white', \r\n            background: \"#0ca9dd\",\r\n            border: \"none\",\r\n            width: \"95%\",\r\n            borderRadius: \"20px\",\r\n            height: '50px',\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={SignInWithFirebase}\r\n        >\r\n          Login using kkumail\r\n        </button>\r\n        </Link>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","class Customer {\r\n    constructor(id, name, bdate, ssn, phone, email, place, date, time, detail, status){\r\n        this.id = id;\r\n        this.name = name\r\n        this.bdate = bdate;\r\n        this.ssn = ssn;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.place = place;\r\n        this.date = date;\r\n        this.time = time;\r\n        this.detail = detail;\r\n        this.status = status\r\n    }\r\n}\r\n\r\nexport default Customer;","import { firebase } from \"../Firebase/firebase\";\r\nimport Customer from '../models/customer';\r\nimport email from '../screens/Customer';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport const getCustomersAdmin = async () => {\r\n    try {\r\n        const response = await firestore.collection('appointment').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getAdminMorning = async () => {\r\n    try {\r\n        const response = await firestore.collection('appoint-morning').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getAdminAfter = async () => {\r\n    try {\r\n        const response = await firestore.collection('appoint-afternoon').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersAppoint = async () => {\r\n    try {\r\n        const response = await firestore.collection('checkout-morning').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersAppointAfter = async () => {\r\n    try {\r\n        const response = await firestore.collection('checkout-afternoon').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersUser = async () => {\r\n    try {\r\n        const response = await firestore.collection('users/' + 'chatchai_aunjai@kkumail.com' + '/custo');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const addCustomer = async (customer) => {\r\n    try {\r\n        await firestore.collection('appointment').doc().set(customer);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addCustomerAppoint = async (appointment) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc().set(appointment);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCustomer = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const getCustomerApp = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('checkout-morning').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateCustomerAdmin = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const updateCustomerUser = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAdmin = async (id) => {\r\n    try {\r\n        await firestore.collection('appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerUser = async (id) => {\r\n    try {\r\n        await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerMorn = async (id) => {\r\n    try {\r\n        await firestore.collection('appoint-morning').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAfter = async (id) => {\r\n    try {\r\n        await firestore.collection('appoint-afternoon').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAppoint= async (id) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Button,} from '@material-ui/core';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nexport const ConfirmDialog = (props) => {\r\n    return (\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={props.close}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle>Submit Done!</DialogTitle>\r\n            <ValidatorForm>\r\n                <DialogContent>\r\n                    Send email confirm to user already!\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.close} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </ValidatorForm>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ConfirmDialog;","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\n// npm install emailjs-com\r\n// invoke in onClick ex.: onClick={sendconfEmail}\r\nexport const sendconfEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var confParams = {\r\n        to_name: name.toString(),\r\n        from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n        email: email.toString()\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_88jjem7', confParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\n// npm install emailjs-com\r\n// invoke in onClick\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\nexport const sendFailedEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var failedParams = {\r\n      to_name: name.toString(),\r\n      from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n      email: email.toString(),\r\n      message: 'วันเวลาที่ท่านเลือกมีการจองคิวเต็มแล้ว โปรดเลือกวันเวลาในการจองใหม่อีกครั้ง ขออภัยในความไม่สะดวก',\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_y6otxwp', failedParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getCustomersAdmin, getAdminMorning, deleteCustomerMorn, deleteCustomerAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint, getAdminAfter } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [allReserveAfter, setAllReserveAfter] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setCustomersMorn([]);\r\n            setLoading(true);\r\n            const list = await getCustomersAdmin();\r\n            setCustomers(list);\r\n            const listMorn = await getAdminMorning();\r\n            setCustomersMorn(listMorn);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveMorn(listMorn.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const setCustomerAfter = async () => {\r\n        try {\r\n            setCustomersMorn([]);\r\n            setLoading(true);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersMorn(listAfter);\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveMorn(listAfter.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteHistory = async () => {\r\n        try {\r\n            customersMorn.map((cust) => {\r\n                deleteCustomerMorn(cust.id);\r\n            });\r\n            customersAfter.map((cust) => {\r\n                deleteCustomerAfter(cust.id);\r\n            });\r\n            const response = await firestore.collection('users');\r\n            const data = await response.get();\r\n            data.forEach( async (doc) => {\r\n                const res = await firestore.collection('users/' + doc.id.toString() + '/custo');\r\n                const dat = await res.get();\r\n                dat.forEach( async (docu) => {\r\n                    await firestore.collection('users/' + doc.id.toString() + '/custo').doc(docu.id).delete();\r\n                });\r\n                await firestore.collection('users').doc(doc.id.toString()).delete();\r\n            });\r\n            getLoading()\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getLoading = async () => {\r\n        const response = await firestore.collection('users');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach( async (doc) => {\r\n            array.push(doc.id);\r\n        })\r\n        if (array.length == 0) {\r\n            setSubOpen(false)\r\n        }\r\n        getlist();\r\n    }\r\n    const confirmDelete = () => {\r\n        setConOpen(true);\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n        setCustomersAfter();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>ลบข้อมูล</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        ยืนยันเพื่อทำการลบข้อมูลทั้งหมด\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            ไม่\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHistory()}>\r\n                           ใช่\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle></DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        <ScaleLoader\r\n                            css={override}\r\n                            size={150}\r\n                            color={\"#eb4034\"}\r\n                            loading={loading} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" >\r\n       \r\n                        </Button>\r\n                        <Button color=\"primary\">\r\n           \r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\" style={{fontWeight:'bold'}}>\r\n                            คิวทั้งหมด {allReserveMorn}\r\n                            <IconButton onClick={() => confirmDelete()} color=\"secondary\" aria-label=\"update customer\" style={{float:'right'}}>\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <BottomNavigation\r\n                    showLabels\r\n                    value={value}\r\n                    style={{backgroundColor:'#DCDCDC'}}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                >\r\n                <BottomNavigationAction label=\"ช่วงเช้า\" onClick={() => getlist()}/>\r\n                <BottomNavigationAction label=\"ช่วงบ่าย\" onClick={() => setCustomerAfter()}/>\r\n                </BottomNavigation>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>ชื่อ - นามสกุล</TableCell>\r\n                            <TableCell className={classes.head}>เบอร์โทรศัพท์</TableCell>\r\n                            <TableCell className={classes.head}>วันที่</TableCell>\r\n                            <TableCell className={classes.head}>เวลา</TableCell>\r\n                            <TableCell className={classes.head}>สถานะ</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersMorn.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersMorn.map((cust, index) => (\r\n                                    <TableRow key={cust.id} style ={ index % 2? { background : \"white\" }:{ background : \"#F5F5F5\" }}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#DC143C'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default Customers;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getCustomersAdmin, getAdminMorning, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\n\r\n\r\n\r\nconst History = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [allReserveAfter, setAllReserveAfter] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const list = await getCustomersAdmin();\r\n            setCustomers(list);\r\n            const listMorn = await getCustomersUser();\r\n            setCustomersMorn(listMorn);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveMorn(listMorn.length);\r\n            const allList = listMorn.length - 2; \r\n            setAllReserveAfter(allList);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('history').orderBy('date', 'desc');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach( async (doc) => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(doc.id);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setStatus(response.status);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const confirmClick = (cust) => {\r\n        sessionStorage.setItem(\"histoDate\", cust);\r\n        console.log(sessionStorage.histoDate.toString())\r\n      };\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHandler(e, custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Submit</DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to submit\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => addCustomerHandler(e)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ประวัติการจองทั้งหมด {allReserveMorn} วัน\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head} style={{fontSize:'20px', fontWeight:'bolder'}}>เลือกวัน</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersMorn.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersMorn.map((cust) => (\r\n                                          <nav aria-label=\"secondary mailbox folders\">\r\n                                          <Link to=\"/history/date\"><List onClick={()=>{confirmClick(cust)}}>\r\n                                            <ListItem disablePadding>\r\n                                            <ListItemButton>\r\n                                                <ListItemText primary={cust} />\r\n                                              </ListItemButton>\r\n                                            </ListItem>\r\n                                          </List></Link>\r\n                                        </nav>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default History;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport Customer from \"../models/customer\";\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { getCustomersAdmin, getAdminMorning, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'Name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ชื่อ',\r\n  },\r\n  {\r\n    id: 'Phone',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'เบอร์โทรศัพท์',\r\n  },\r\n  {\r\n    id: 'Date',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'วัน',\r\n  },\r\n  {\r\n    id: 'Time',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'เวลาที่เช็คอิน',\r\n  },\r\n  {\r\n    id: 'Status',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'สถานะ',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n};\r\n\r\n  return (\r\n    <TableHead style={{backgroundColor:'#C0C0C0'}}>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            style={{textAlign: 'left', fontSize:'15px', fontWeight:'bold'}}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customersMorn, setCustomersMorn] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [allReserveMorn, setAllReserveMorn] = useState('');\r\n  const [name, setName] = useState('');\r\n  const handleName = (event) => {\r\n  const regex = /^[\\u0E00-\\u0E7Fa-zA-Z\\s']*$/\r\n  // thai and english characters only using regex\r\n    if(event.target.value === '' || regex.test(event.target.value) ){\r\n        setName(event.target.value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      getlist();\r\n  }, []);\r\n\r\n  const getCustomersUser = async () => {\r\n      try {\r\n          const response = await firestore.collection('history/' + sessionStorage.histoDate.toString() + '/custo').orderBy('time');\r\n          const data = await response.get();\r\n          let array = [];\r\n          data.forEach(doc => {\r\n              const customer = new Customer(\r\n                  doc.id,\r\n                  doc.data().name,\r\n                  doc.data().bdate,\r\n                  doc.data().ssn,\r\n                  doc.data().phone,\r\n                  doc.data().email,\r\n                  doc.data().place,\r\n                  doc.data().date,\r\n                  doc.data().time,\r\n                  doc.data().detail,\r\n                  doc.data().status\r\n              );\r\n              array.push(customer);\r\n          });\r\n          return array;\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n  const getCustomersSearch = async () => {\r\n    try {\r\n        const response = await firestore.collection('history/' + sessionStorage.histoDate.toString() + '/custo');\r\n        const data = await response.where('name', '==', name).get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n  }\r\n  const getlist = async () => {\r\n      try {\r\n          setLoading(true);\r\n          const listMorn = await getCustomersUser();\r\n          setCustomersMorn(listMorn);\r\n          setAllReserveMorn(listMorn.length);\r\n          setLoading(false);\r\n      } catch (error) {\r\n          toast.error(error.message);\r\n          setLoading(false);\r\n      }\r\n  }\r\n\r\n  const getSearch = async () => {\r\n    try {\r\n        setLoading(true);\r\n        const listMorn = await getCustomersSearch();\r\n        setCustomersMorn(listMorn);\r\n        setAllReserveMorn(listMorn.length);\r\n        setLoading(false);\r\n    } catch (error) {\r\n        toast.error(error.message);\r\n        setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = customersMorn.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - customersMorn.length) : 0;\r\n\r\nconst override = `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;    \r\n    border-color: red;\r\n`;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Toolbar>\r\n        <div style={{flexGrow: 1}}>\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n          style={{fontWeight:'bolder'}}\r\n        >\r\n          วันที่ {sessionStorage.histoDate.toString()}\r\n        </Typography>\r\n        </div>\r\n          <div style={{float:'right'}}>\r\n          <InputBase\r\n            sx={{ ml: 1, flex: 1 }}\r\n            onChange={handleName}\r\n            value={name}\r\n            placeholder=\"ค้นหาด้วยชื่อผู้เช็คอิน\"\r\n            inputProps={{ 'aria-label': 'search google maps' }}\r\n          />\r\n          <IconButton type=\"submit\" sx={{ p: '10px' }} edge=\"end\" aria-label=\"search\">\r\n            <SearchIcon onClick={()=>{getSearch()}}/>\r\n          </IconButton>\r\n          </div>\r\n      </Toolbar>\r\n\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={customersMorn.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(customersMorn, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    customersMorn.length === 0 ? (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                          <ScaleLoader\r\n                            css={override}\r\n                            size={150}\r\n                            color={\"#eb4034\"}\r\n                            loading={loading} />\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    ) : (\r\n                    <>\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                      style ={ index % 2? { background : \"white\" }:{ background : \"#F5F5F5\" }}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.phone}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.date}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.time}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.status}</TableCell>\r\n                    </TableRow>\r\n                    </>\r\n                  )\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6}>\r\n                  <ScaleLoader\r\n                        css={override}\r\n                        size={150}\r\n                        color={\"#eb4034\"}\r\n                        loading={loading} />\r\n                </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={customersMorn.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"\"\r\n      />\r\n    </Box>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getAdminMorning, deleteCustomerMorn, deleteCustomerAfter, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [allReserveAfter, setAllReserveAfter] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"false\");\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listMorn = await getAdminMorning();\r\n            setCustomersMorn(listMorn);\r\n            setAllReserveMorn(listMorn.length);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveAfter(listAfter.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setStatus(response.status);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteHistory = async () => {\r\n        try {\r\n            customersMorn.map((cust) => {\r\n                deleteCustomerMorn(cust.id);\r\n            });\r\n            customersAfter.map((cust) => {\r\n                deleteCustomerAfter(cust.id);\r\n            });\r\n            const response = await firestore.collection('users');\r\n            const data = await response.get();\r\n            data.forEach( async (doc) => {\r\n                const res = await firestore.collection('users/' + doc.id.toString() + '/custo');\r\n                const dat = await res.get();\r\n                dat.forEach( async (docu) => {\r\n                    await firestore.collection('users/' + doc.id.toString() + '/custo').doc(docu.id).delete();\r\n                });\r\n                await firestore.collection('users').doc(doc.id.toString()).delete();\r\n            });\r\n            getLoading()\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getLoading = async () => {\r\n        setSubOpen(true)\r\n        setLoading(true)\r\n        const response = await firestore.collection('users');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach( async (doc) => {\r\n            array.push(doc.id);\r\n        })\r\n        if (array.length == 0) {\r\n            setLoading (false)\r\n            setSubOpen(false)\r\n        }\r\n        getlist();\r\n    }\r\n    const confirmDelete = () => {\r\n        setConOpen(true);\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        ยืนยันเพื่อทำการลบข้อมูลทั้งหมด\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHistory()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle></DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        <ScaleLoader\r\n                            css={override}\r\n                            size={150}\r\n                            color={\"#eb4034\"}\r\n                            loading={loading} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" >\r\n       \r\n                        </Button>\r\n                        <Button color=\"primary\">\r\n           \r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            คิวทั้งหมด {allReserveAfter}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <Link to=\"/admin\"><ToggleButton value=\"true\">ช่วงเช้า</ToggleButton></Link>\r\n                <ToggleButton value=\"false\" onClick={() => refreshPage()}>ช่วงบ่าย</ToggleButton>\r\n                {console.log(alignment)}\r\n                </ToggleButtonGroup>\r\n                <IconButton onClick={() => confirmDelete()} color=\"secondary\" aria-label=\"update customer\" style={{float:'right', marginRight:'50px'}}>\r\n                    <Delete />\r\n                </IconButton>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersAfter.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersAfter.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#DC143C'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default Customers;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { deleteCustomerAppoint, getCustomersAppoint, getCustomerApp } from '../data/customerData';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Customer from \"../models/customer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst AppointDone = () => {\r\n    const classes = useStyles();\r\n    const [customersApp, setCustomersApp] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n    }\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listApp = await getCustomersAppoint();\r\n            setCustomersApp(listApp);\r\n            setAllReserve(listApp.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomerApp(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n            await deleteCustomerAppoint(id);\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  deleteHandler(custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ตรวจสอบคิวเสร็จสิ้นทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <ToggleButton value=\"true\">ช่วงเช้า</ToggleButton>\r\n                <Link to=\"/appointment/afternoon\"><ToggleButton value=\"false\">ช่วงบ่าย</ToggleButton></Link>\r\n                </ToggleButtonGroup>\r\n                <Table className={classes.table} style={{width:'100%', alignContent:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersApp.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersApp.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#00008B'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                listUser={getlistUser}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default AppointDone;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { deleteCustomerAppoint, getCustomersAppointAfter, getCustomerApp } from '../data/customerData';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Customer from \"../models/customer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst AppointDone = () => {\r\n    const classes = useStyles();\r\n    const [customersApp, setCustomersApp] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n    }\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listApp = await getCustomersAppointAfter();\r\n            setCustomersApp(listApp);\r\n            setAllReserve(listApp.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomerApp(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n            await deleteCustomerAppoint(id);\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  deleteHandler(custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ตรวจสอบคิวเสร็จสิ้นทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <Link to=\"/appointment\"><ToggleButton value=\"true\">ช่วงเช้า</ToggleButton></Link>\r\n                <ToggleButton value=\"false\">ช่วงบ่าย</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Table className={classes.table} style={{width:'100%', alignContent:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersApp.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersApp.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#00008B'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                listUser={getlistUser}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default AppointDone;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport axios from 'axios';\r\nimport \"../App.css\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport '../assets/css/confirm.css'\r\nimport { store } from \"react-notifications-component\";;\r\nconst EditDefault = () => {\r\n  const classes = useStyles();\r\n  // variables\r\n  const defaultMaxCap = 240;\r\n  const defaultMorningStartTime = \"09:00\";\r\n  const defaultMorningEndTime = \"12:00\";\r\n  const defaultEveningStartTime = \"13:30\";\r\n  const defaultEveningEndTime = \"16:30\";\r\n  const baseURL = \"https://kkulib-testapi.herokuapp.com/settings\";\r\n  // useState\r\n  const [toggleCalendar, setToggleCalendar] = useState(true);\r\n  const [weekends, enableWeekends] = useState(false);\r\n  const [userMaxCap, setUserCap] = useState(defaultMaxCap);\r\n  const [morningStartTime, setMorningStartTime] = useState(\r\n    defaultMorningStartTime\r\n  );\r\n  const [morningEndTime, setMorningEndTime] = useState(defaultMorningEndTime);\r\n  const [eveningStartTime, setEveningStartTime] = useState(\r\n    defaultEveningStartTime\r\n  );\r\n  const [eveningEndTime, setEveningEndTime] = useState(defaultEveningEndTime);\r\n  const [confirmSettings, setConfirmSettings] = useState(false);\r\n  // functions\r\n  const setMornStart = (evt) => {\r\n    setMorningStartTime(evt.target.value);\r\n  };\r\n  const setMornEnd = (evt) => {\r\n    setMorningEndTime(evt.target.value);\r\n  };\r\n  const setEveningStart = (evt) => {\r\n    setEveningStartTime(evt.target.value);\r\n  };\r\n  const setEveningEnd = (evt) => {\r\n    setEveningEndTime(evt.target.value);\r\n  };\r\n  const toggleCalendarOn = () => {\r\n    setToggleCalendar(\"true\");\r\n  };\r\n  const toggleCalendarOff = () => {\r\n    setToggleCalendar(\"false\");\r\n  };\r\n  const toggleWeekendsOn = () => {\r\n    enableWeekends(\"true\");\r\n  };\r\n  const toggleWeekendsOff = () => {\r\n    enableWeekends(\"false\");\r\n  };\r\n  const setMaxCap = (evt) => {\r\n    setUserCap(evt.target.value ? evt.target.value : 240);\r\n  };\r\n  const ConfirmClick = () => {\r\n    setConfirmSettings(true)\r\n  };\r\n  \r\n  // useEffect\r\n  useEffect(() => {\r\n    if(confirmSettings === true){\r\n      console.log(\"user capacity : \" + userMaxCap);\r\n      console.log(\"toggle calendar : \" + toggleCalendar);\r\n      console.log(\"weekend state is \" + weekends);\r\n      console.log(\"Morning start : \" + morningStartTime);\r\n      console.log(\"Morning end : \" + morningEndTime);\r\n      console.log(\"Evening start : \" + eveningStartTime);\r\n      console.log(\"Evening end : \" + eveningEndTime);\r\n      const sendSettings = async () =>{\r\n        const options = {\r\n          method: 'patch',\r\n          url: baseURL,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n        var settings = {\r\n          \"maxUser\": userMaxCap,\r\n          \"selectable\" : toggleCalendar,\r\n          \"weekends\": weekends,\r\n          \"businessHours\": [\r\n            {\r\n              daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\r\n              startTime: morningStartTime,\r\n              endTime: morningEndTime,\r\n            },\r\n            {\r\n              daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\r\n              startTime: eveningStartTime,\r\n              endTime: eveningEndTime,\r\n            },\r\n          ],\r\n        }\r\n        await axios.patch(baseURL, settings, options)\r\n        .then((response) => {\r\n          if(response.status === 200){\r\n            store.addNotification({\r\n              title: \"สำเร็จ!\",\r\n              message: \"แก้ไขการจองสำเร็จ\",\r\n              type: \"success\",\r\n              insert: \"top\",\r\n              container: \"top-right\",\r\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n              dismiss: {\r\n                duration: 5000,\r\n                onScreen: true\r\n              }\r\n            });\r\n            \r\n          } else {\r\n            store.addNotification({\r\n              title: \"ล้มเหลว!\",\r\n              message: \"ตั้งค่าการจองไม่สำเร็จ\",\r\n              type: \"danger\",\r\n              insert: \"top\",\r\n              container: \"top-right\",\r\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n              dismiss: {\r\n                duration: 5000,\r\n                onScreen: true\r\n              }\r\n            });\r\n          }\r\n        },(error) => {\r\n          store.addNotification({\r\n            title: \"ล้มเหลว!\",\r\n            message: `แก้ไขกาตั้งค่าของการจองไม่สำเร็จ เนื่องจาก ${error}` ,\r\n            type: \"danger\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true\r\n            }\r\n          });\r\n        }\r\n        ) \r\n      }\r\n      sendSettings();\r\n      setConfirmSettings(false);\r\n    } \r\n  }, [\r\n    eveningEndTime,\r\n    eveningStartTime,\r\n    morningEndTime,\r\n    morningStartTime,\r\n    toggleCalendar,\r\n    userMaxCap,\r\n    weekends,\r\n    confirmSettings\r\n  ]);\r\n  return (\r\n    <Grid style={{ width: \"100%\", padding: \"20px\" }}>\r\n      <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n        แก้ไขระเบียบการจอง\r\n      </Typography>\r\n      <Container\r\n        component={Paper}\r\n        style={{ width: \"100%\", display: \"block\", alignContent: \"center\" }}\r\n      >\r\n        <Grid container style={{ width: \"100%\", pading: \"20px\" }}>\r\n          <Grid item xs={8}>\r\n            <p\r\n              style={{ fontSize: 20, marginTop: \"20px\", marginBottom: \"10px\" }}\r\n            >\r\n              เวลาทำการ{\" \"}\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={7} sm={7} md={5}>\r\n            <p style={{ fontSize: 20 }}>\r\n              ช่วงเช้า :{\" \"}\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"เริ่ม\"\r\n                defaultValue=\"09:00\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                style={{ marginRight: \"10px\", marginBottom:'20px' }}\r\n                onChange={setMornStart}\r\n              />\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"สิ้นสุด\"\r\n                defaultValue=\"12:00\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                onChange={setMornEnd}\r\n              />\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={7} sm={7} md={5}>\r\n            <p style={{ fontSize: 20 }}>\r\n              ช่วงบ่าย :{\" \"}\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"เริ่ม\"\r\n                defaultValue=\"13:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                style={{ marginRight: \"10px\", marginBottom:'20px'}}\r\n                onChange={setEveningStart}\r\n              />\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"สิ้นสุด\"\r\n                defaultValue=\"16:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                onChange={setEveningEnd}\r\n              />\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={10} sm={10} md={6} style={{ marginTop: \"40px\" }}>\r\n            <p style={{ fontSize: 20 }}>\r\n              จำนวนผู้ใช้งานที่รองรับ :{\" \"}\r\n              <TextField\r\n                required\r\n                onChange={setMaxCap}\r\n                defaultValue=\"240\"\r\n                type=\"number\"\r\n              />\r\n            </p>\r\n            <p style={{ fontSize: 20, marginTop: \"30px\" }}>\r\n              เปิดทำการเสาร์-อาทิตย์ :{\" \"}\r\n              <RadioGroup\r\n              row\r\n              aria-label=\"gender\"\r\n              name=\"row-radio-buttons-group\"\r\n              defaultValue=\"open\"\r\n              style={{ marginLeft: \"30px\" }}\r\n            >\r\n              <FormControlLabel\r\n                value=\"open\"\r\n                control={<Radio />}\r\n                onClick={toggleWeekendsOn}\r\n                label=\"เปิด\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"close\"\r\n                control={<Radio color=\"secondary\" />}\r\n                onClick={toggleWeekendsOff}\r\n                label=\"ปิด\"\r\n              />\r\n            </RadioGroup>\r\n            </p>\r\n            <p style={{ fontSize: 20, marginTop: \"30px\" }}>ระบบการจอง : </p>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"gender\"\r\n              name=\"row-radio-buttons-group\"\r\n              defaultValue=\"open\"\r\n              style={{ marginLeft: \"30px\" }}\r\n            >\r\n              <FormControlLabel\r\n                value=\"open\"\r\n                control={<Radio />}\r\n                onClick={toggleCalendarOn}\r\n                label=\"เปิด\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"close\"\r\n                control={<Radio color=\"secondary\" />}\r\n                onClick={toggleCalendarOff}\r\n                label=\"ปิด\"\r\n              />\r\n            </RadioGroup>\r\n            <br />\r\n            <br />\r\n            <div style={{ padding: \"10px\" , paddingBottom:'20px'}}>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{backgroundColor:'#0ca9dd', color:'white'}}\r\n                onClick={() => {\r\n                  confirmAlert({\r\n                    childrenElement: () => <div></div>, // Custom UI or Component\r\n                    buttons: [\r\n                      {\r\n                        label: \"ยกเลิก\",\r\n                      },\r\n                      {\r\n                        label: \"ยืนยัน\",\r\n                        onClick: () => ConfirmClick(),\r\n                      },\r\n                    ],\r\n                    closeOnEscape: true,\r\n                    closeOnClickOutside: true,\r\n                    customUI: ({ onClose }) => {\r\n                      return (\r\n                        <div\r\n                          className=\"custom-ui\"\r\n                          style={{ backgroundColor: \"white\", width:'200px', textAlign:'center' }}\r\n                        >\r\n                          <h1>ยืนยัน</h1>\r\n                          <p style={{ height:'50px', paddingTop:'10px'}}>แก้ไขการตั้งค่าหรือไม่</p>\r\n                          <div\r\n                            className=\"alert-btn-container\"\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              paddingTop: \"5px\",\r\n                              float: \"right\",\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              \r\n                              onClick={() => {\r\n                                ConfirmClick();\r\n                                onClose();\r\n                              }}\r\n                              style={{ cursor: \"pointer\",marginRight:'10px', backgroundColor:'#0ca9dd', color:'white' }}\r\n                            >\r\n                              ยืนยัน\r\n                            </Button>\r\n                            <div>\r\n                              <Button\r\n                                style={{ cursor: \"pointer\", backgroundColor:'#DCDCDC' }}\r\n                                onClick={onClose}\r\n                              >\r\n                                ยกเลิก\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                ยืนยัน\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n    [\"@media (min-width:320px)\"]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  container: {\r\n    marginTop: \"40px\",\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    padding: \"20px\",\r\n  },\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nexport default EditDefault;\r\n","export default __webpack_public_path__ + \"static/media/error.9336417a.png\";","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Button } from 'antd';\r\nimport error from '../images/error.png';\r\nimport {\r\n    Link,\r\n   \r\n  } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nconst Errorpage = () => {\r\n    return(\r\n        <Layout id=\"error-layout\"style={{width: 500, height: 300, textAlign: 'center', background: '#f6f6f6', alignItems: 'center', boxShadow: '2px 17px 22px -6px rgba(0,0,0,0.75)', borderRadius:'10px'}}>\r\n            <img src={error} style={{width: 200, textAlign: 'center'}} alt=\"error\"/>\r\n            <Typography style={{}}>The page you requested could not be found</Typography>\r\n            <Layout style={{paddingTop: 10, background: '#f6f6f6'}}>\r\n            <Link to ={'/admin'}><Button  style={{textAlign: 'center', width: 200, height: 30 , color: 'white', background: \"#0ca9dd\"}}>Go to mainpage</Button></Link>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Errorpage;","import './App.css';\r\nimport NavBar from './layouts/header';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './authentication/Login';\r\nimport SignUp from './authentication/SignUp';\r\nimport SignIn from './screens/SignIn'\r\nimport Customers from './screens/Customer';\r\nimport History from './screens/History';\r\nimport HistoryDate from './screens/HistoryDate';\r\nimport CustomersAfter from './screens/CustomerAfter';\r\nimport AppointDone from './screens/AppointDone';\r\nimport AppointDoneAfter from './screens/AppointDoneAfter';\r\nimport EditData from './screens/EditDefault';\r\nimport Errorpage from './screens/Errorpage';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { Layout } from 'antd';\r\nimport { firebase } from \"./Firebase/firebase\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nconst Routers = () => (\r\n  <div>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/admin\">\r\n          <NavBar/>\r\n          <Customers/>  \r\n        </Route>\r\n        <Route exact path=\"/admin/afternoon\">\r\n          <NavBar/>\r\n          <CustomersAfter/>\r\n        </Route>\r\n        <Route exact path=\"/appointment\">\r\n          <NavBar/>\r\n          <AppointDone/>  \r\n        </Route>\r\n        <Route exact path=\"/appointment/afternoon\">\r\n          <NavBar/>\r\n          <AppointDoneAfter/>\r\n        </Route>\r\n        <Route exact path=\"/edit_default\">\r\n          <NavBar/>\r\n          <EditData/>  \r\n        </Route>\r\n        <Route exact path=\"/history\">\r\n          <NavBar/>\r\n          <History/>  \r\n        </Route>\r\n        <Route exact path=\"/history/date\">\r\n          <NavBar/>\r\n          <HistoryDate/>  \r\n        </Route>\r\n        <Route>\r\n          <Errorpage/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState(true);\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if(user) {\r\n      return setIsUserSignedIn(true);\r\n    }\r\n\r\n    setIsUserSignedIn(false)\r\n  })\r\n  if (isUserSignedIn === true){\r\n    return (\r\n      <Router>\r\n      <section className=\"hero\">\r\n        <Layout class=\"mainLayout\">\r\n          <ReactNotification/>\r\n          <Routers/>\r\n        </Layout>\r\n      </section>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SignIn}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}