{"version":3,"sources":["Firebase/firebase.js","layouts/NavBar.js","helpers/db.js","authentication/Login.js","authentication/SignUp.js","images/kkulogo.png","screens/SignIn.js","models/customer.js","data/customerData.js","screens/ConfirmDialog.js","sendEmail/sendEmail.js","sendEmail/sendFailedEmail.js","screens/Customer.js","screens/AppointDone.js","images/error.png","screens/Errorpage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","flexGrow","menubackgroud","background","title","NavBar","props","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","style","fontWeight","Button","id","undefined","onClick","event","currentTarget","color","Menu","MenuListProps","onClose","TransitionComponent","Fade","MenuItem","to","signOut","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","card","paddingLeft","paddingRight","paddingBottom","pointer","cursor","Title","SignIn","src","kkulogo","alt","borderRadius","type","border","height","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","data","storetoken","username","displayName","email","imageurl","photoURL","userId","uid","firestore","collection","doc","set","localStorage","setItem","JSON","stringify","signin","catch","error","code","errorMessage","message","console","log","Customer","name","bdate","ssn","phone","place","date","time","detail","status","this","getCustomersAdmin","a","orderBy","response","get","array","forEach","customer","push","getCustomersAppoint","addCustomerAppoint","appointment","getCustomer","getCustomerApp","deleteCustomerAdmin","delete","deleteCustomerAppoint","ConfirmDialog","Dialog","close","DialogTitle","DialogContent","DialogActions","init","sendconfEmail","e","preventDefault","confParams","to_name","toString","from_name","emailjs","send","text","sendFailedEmail","failedParams","table","minWidth","container","flex","padding","head","palette","common","black","white","button","float","Customers","customers","setCustomers","customersUser","setCustomersUser","loading","setLoading","setOpen","conOpen","setConOpen","subOpen","setSubOpen","doneOpen","setDoneOpen","formMode","setFormMode","allReserve","setAllReserve","custId","setCustId","setName","setSsn","setPhone","setEmail","setPlace","setDate","setTime","setDetail","setStatus","setBirth","getlist","list","length","toast","getlistUser","getCustomersUser","listUser","getSubmitUser","getOneCustomer","deleteHandler","success","deleteHandlerUser","deleteCustomerUser","addCustomerHandler","map","custUser","updateCustomerUser","res","update","useEffect","CustomerDialog","fullWidth","maxWidth","Grid","item","xs","sm","md","fontSize","icon","Close","ConfirmDelete","onSubmit","ConfirmSubmit","pading","TableContainer","component","Paper","alignContent","Table","alignSelf","TableHead","TableRow","TableCell","TableBody","colSpan","css","size","cust","IconButton","Edit","formmode","changeName","target","value","changeSsn","changePhone","changeEmail","changePlace","changeDate","changeTime","changeDetail","changeStatus","addCustomer","onSub","AppointDone","customersApp","setCustomersApp","listApp","Delete","Errorpage","textAlign","paddingTop","shape","Routers","exact","path","App","isUserSignedIn","setIsUserSignedIn","onAuthStateChanged","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d944bc7f.chunk.js","sourcesContent":["import firebase from 'firebase/compat'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export {firebase};","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Fade from '@mui/material/Fade';\r\nimport MenuSharpIcon from '@mui/icons-material/MenuSharp';\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Bolt } from \"@mui/icons-material\";\r\n\r\nconst NavBar = (props) => {\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const signOut = () => {\r\n        firebase.auth().signOut();\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.menubackgroud}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" className={classes.title} style={{fontWeight:'bold'}}>\r\n                        PCU Admin\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                            <Button\r\n                                id=\"fade-button\"\r\n                                aria-controls=\"fade-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                onClick={handleMenu}\r\n                                style={{color:'black'}}\r\n                            >\r\n                                <MenuSharpIcon/>\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"fade-menu\"\r\n                                MenuListProps={{\r\n                                'aria-labelledby': 'fade-button',\r\n                                }}\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                TransitionComponent={Fade}\r\n                            >\r\n                                <MenuItem onClick={handleClose}><Link to=\"/admin\">รอการตรวจสอบ</Link></MenuItem>\r\n                                <MenuItem onClick={handleClose}><Link to=\"/appointment\">ตรวจสอบแล้ว</Link></MenuItem>\r\n                                <MenuItem onClick={() => signOut()}><Link to=\"/\">ออกจากระบบ</Link></MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n    },\r\n    menubackgroud: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        \r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nexport default NavBar;","import firebase from 'firebase/compat';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n};\r\n    \r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default fire;","import React, { useState } from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, FormControlLabel,\r\n    Button, Checkbox, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport { LockRounded } from '@material-ui/icons';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/db';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport {ScaleLoader} from 'react-spinners';\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberme, setRememberMe] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const override = `\r\n        display: block;\r\n        margin-left: 100px;\r\n        border-color: red;\r\n    `;\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleCheck = (event) => {\r\n        setRememberMe(event.target.checked);\r\n    }\r\n    const handlerLogin = () => {\r\n        setLoading(true);\r\n        fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                const {user} =  response;\r\n                const data = {\r\n                    userId: user.uid,\r\n                    email: user.email\r\n                }\r\n                var users = fire.firestore().collection(\"users\").doc(user.uid);\r\n                users.set({\r\n                    email: user.email,\r\n                    id: user.uid\r\n                })\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n                const storage = localStorage.getItem('user');\r\n                const loggedInUser = storage !== null ? JSON.parse(storage) : null;\r\n                props.loggedIn(loggedInUser);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                toast.error(error.message);\r\n                setLoading(false);\r\n            });\r\n}\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer/>\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign In\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handlerLogin}\r\n                            onError={errors => {\r\n                                for (const err of errors) {\r\n                                    console.log(err.props.errorMessages[0])\r\n                                }\r\n                            }}\r\n\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off' />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value={rememberme} onChange={(e) => handleCheck(e)} color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            {loading ? (\r\n                                <ScaleLoader\r\n                                css={override}\r\n                                size={150}\r\n                                color={\"#eb4034\"}\r\n                                loading={loading}/>\r\n                            ) : (\r\n                                    <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                Sign In\r\n                            </Button>\r\n                            )}\r\n                            \r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%'\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}));\r\n\r\nexport default Login;","import React, {useEffect, useState} from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, \r\n    Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport {LockRounded} from '@material-ui/icons';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport fire from '../helpers/db';\r\nimport firebase from '../helpers/db';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleConfirmPassowerd = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    \r\n    const handleSignUp = () => {\r\n        fire.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                if(response) {\r\n                    props.toggle();\r\n                    toast.success('User Registered Successfully');                    \r\n                }\r\n            }).catch((error) => {\r\n                switch (error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        toast.error(error.message);\r\n                        break;\r\n                    case 'auth/invalid-email': \r\n                        toast.error(error.message);                    \r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        toast.error(error.message);\r\n                        break;\r\n                }\r\n            });      \r\n    }\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if(value !== password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        }\r\n    }, [password])\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handleSignUp}\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off'\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm password\"\r\n                                fullWidth\r\n                                onChange={handleConfirmPassowerd}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Already have an account? Sign In\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        '@media(minWidth: 568px)' : {\r\n        },\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%',\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}))\r\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/kkulogo.cb762e90.png\";","import React from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport { Typography } from 'antd';\r\nimport kkulogo from '../images/kkulogo.png';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nconst SignIn = (props) => {\r\n  const SignInWithFirebase = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            const token = result.credential.accessToken;\r\n            const user = result.user;\r\n            const data = {\r\n                storetoken: token,\r\n                username: user.displayName,\r\n                email: user.email,\r\n                imageurl: user.photoURL,\r\n                userId: user.uid\r\n            }\r\n            var users = firebase.firestore().collection(\"users\").doc(user.email);\r\n                users.set({\r\n                    email: user.email,\r\n            })\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            props.signin(data);\r\n        }).catch((error) => {\r\n            const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = error.credential;\r\n          console.log(errorMessage);\r\n        });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginLogoContainer\">\r\n          <img className=\"loginlogo\" src={kkulogo} alt=\"kkulogo\"/>\r\n        </div>\r\n        <div className=\"loginTitleContainer\">\r\n          <Title>ระบบบริการหน่วยปฐมภูมิ มหาวิทยาลัยขอนแก่น</Title>\r\n        </div>\r\n        <div \r\n            style={{\r\n              width: \"95%\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n        >\r\n          <Link to=\"/admin\">\r\n        <button\r\n          type=\"primary\"\r\n          style={{\r\n            background: \"green\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"95%\",\r\n            borderRadius: \"20px\",\r\n            height: '50px',\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={SignInWithFirebase}\r\n        >\r\n          Login using kkumail\r\n        </button>\r\n        </Link>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","class Customer {\r\n    constructor(id, name, bdate, ssn, phone, email, place, date, time, detail, status){\r\n        this.id = id;\r\n        this.name = name\r\n        this.bdate = bdate;\r\n        this.ssn = ssn;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.place = place;\r\n        this.date = date;\r\n        this.time = time;\r\n        this.detail = detail;\r\n        this.status = status\r\n    }\r\n}\r\n\r\nexport default Customer;","import { firebase } from \"../Firebase/firebase\";\r\nimport Customer from '../models/customer';\r\nimport email from '../screens/Customer';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport const getCustomersAdmin = async () => {\r\n    try {\r\n        const response = await firestore.collection('appointment').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersAppoint = async () => {\r\n    try {\r\n        const response = await firestore.collection('complete-appointment').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersUser = async () => {\r\n    try {\r\n        const response = await firestore.collection('users/' + 'chatchai_aunjai@kkumail.com' + '/custo');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const addCustomer = async (customer) => {\r\n    try {\r\n        await firestore.collection('appointment').doc().set(customer);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addCustomerAppoint = async (appointment) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc().set(appointment);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCustomer = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const getCustomerApp = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('complete-appointment').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateCustomerAdmin = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const updateCustomerUser = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAdmin = async (id) => {\r\n    try {\r\n        await firestore.collection('appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerUser = async (id) => {\r\n    try {\r\n        await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAppoint= async (id) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Button,} from '@material-ui/core';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nexport const ConfirmDialog = (props) => {\r\n    return (\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={props.close}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle>Submit Done!</DialogTitle>\r\n            <ValidatorForm>\r\n                <DialogContent>\r\n                    Send email confirm to user already!\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.close} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </ValidatorForm>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ConfirmDialog;","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\n// npm install emailjs-com\r\n// invoke in onClick ex.: onClick={sendconfEmail}\r\nexport const sendconfEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var confParams = {\r\n        to_name: name.toString(),\r\n        from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n        email: email.toString()\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_88jjem7', confParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\n// npm install emailjs-com\r\n// invoke in onClick\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\nexport const sendFailedEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var failedParams = {\r\n      to_name: name.toString(),\r\n      from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n      email: email.toString(),\r\n      message: 'วันเวลาที่ท่านเลือกมีการจองคิวเต็มแล้ว โปรดเลือกวันเวลาในการจองใหม่อีกครั้ง ขออภัยในความไม่สะดวก',\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_y6otxwp', failedParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getCustomersAdmin, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const list = await getCustomersAdmin();\r\n            setCustomers(list);\r\n            setAllReserve(list.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                bdate,\r\n                ssn,\r\n                phone,\r\n                email,\r\n                place,\r\n                date,\r\n                time,\r\n                detail,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setBirth('');\r\n            setSsn('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setPlace('');\r\n            setDate('');\r\n            setTime('');\r\n            setDetail('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันเกิด : <span style={{color:'#3F838C'}}>{props.bdate}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHandler(e, custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Submit</DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to submit\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => addCustomerHandler(e)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            รอการตรวจสอบคิวทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>SSN</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Place</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Detail</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customers.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customers.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.ssn}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.place}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell>{cust.detail}</TableCell>\r\n                                        <TableCell style={{color:'#DC143C'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"primary\" aria-label=\"update customer\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default Customers;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { deleteCustomerAppoint, getCustomersAppoint, getCustomerApp } from '../data/customerData';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst AppointDone = () => {\r\n    const classes = useStyles();\r\n    const [customersApp, setCustomersApp] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n    }\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listApp = await getCustomersAppoint();\r\n            setCustomersApp(listApp);\r\n            setAllReserve(listApp.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomerApp(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n            await deleteCustomerAppoint(id);\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  deleteHandler(custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ตรวจสอบคิวเสร็จสิ้นทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Table className={classes.table} style={{width:'100%', alignContent:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>SSN</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Place</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Detail</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersApp.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersApp.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.ssn}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.place}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell>{cust.detail}</TableCell>\r\n                                        <TableCell style={{color:'#00008B'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                listUser={getlistUser}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default AppointDone;","export default __webpack_public_path__ + \"static/media/error.9336417a.png\";","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Button } from 'antd';\r\nimport error from '../images/error.png';\r\nimport {\r\n    Link,\r\n   \r\n  } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nconst Errorpage = () => {\r\n    return(\r\n        <Layout id=\"error-layout\"style={{textAlign: 'center', background: '#99DFB2', alignItems: 'center'}}>\r\n            <img src={error} style={{width: 200, textAlign: 'center'}} alt=\"error\"/>\r\n            <Typography style={{}}>The page you requested could not be found</Typography>\r\n            <Layout style={{paddingTop: 10, background: '#99DFB2'}}>\r\n            <Link to ={'/admin'}><Button type=\"primary\" shape=\"round\" style={{textAlign: 'center', width: 175}}>Go to mainpage</Button></Link>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Errorpage;","import './App.css';\r\nimport NavBar from './layouts/NavBar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './authentication/Login';\r\nimport SignUp from './authentication/SignUp';\r\nimport SignIn from './screens/SignIn'\r\nimport Customers from './screens/Customer';\r\nimport AppointDone from './screens/AppointDone';\r\nimport Errorpage from './screens/Errorpage';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { Layout } from 'antd';\r\nimport { firebase } from \"./Firebase/firebase\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nconst Routers = () => (\r\n  <div>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/admin\">\r\n          <NavBar/>\r\n          <Customers/>  \r\n        </Route>\r\n        <Route exact path=\"/appointment\">\r\n          <NavBar/>\r\n          <AppointDone/>  \r\n        </Route>\r\n        <Route>\r\n          <Errorpage/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState(true);\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if(user) {\r\n      return setIsUserSignedIn(true);\r\n    }\r\n\r\n    setIsUserSignedIn(false)\r\n  })\r\n  if (isUserSignedIn === true){\r\n    return (\r\n      <Router>\r\n      <section className=\"hero\">\r\n        <Layout class=\"mainLayout\">\r\n          <ReactNotification/>\r\n          <Routers/>\r\n        </Layout>\r\n      </section>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SignIn}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}