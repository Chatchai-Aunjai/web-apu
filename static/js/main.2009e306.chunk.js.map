{"version":3,"sources":["Firebase/firebase.js","layouts/NavBar.js","helpers/db.js","authentication/Login.js","authentication/SignUp.js","images/kkulogo.png","screens/SignIn.js","models/customer.js","data/customerData.js","screens/ConfirmDialog.js","sendEmail/sendEmail.js","sendEmail/sendFailedEmail.js","screens/Customer.js","screens/History.js","screens/HistoryDate.js","screens/CustomerAfter.js","screens/AppointDone.js","screens/AppointDoneAfter.js","screens/EditDefault.js","images/error.png","screens/Errorpage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","flexGrow","menubackgroud","background","title","NavBar","props","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","style","fontWeight","Button","id","undefined","onClick","event","currentTarget","color","Menu","MenuListProps","onClose","TransitionComponent","Fade","MenuItem","to","signOut","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","card","paddingLeft","paddingRight","paddingBottom","pointer","cursor","Title","SignIn","src","kkulogo","alt","borderRadius","type","border","height","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","data","storetoken","username","displayName","email","imageurl","photoURL","userId","uid","firestore","collection","doc","set","localStorage","setItem","JSON","stringify","signin","catch","error","code","errorMessage","message","console","log","Customer","name","bdate","ssn","phone","place","date","time","detail","status","this","getCustomersAdmin","a","orderBy","response","get","array","forEach","customer","push","getAdminMorning","getAdminAfter","getCustomersAppoint","getCustomersAppointAfter","addCustomerAppoint","appointment","getCustomer","getCustomerApp","deleteCustomerAdmin","delete","deleteCustomerMorn","deleteCustomerAfter","deleteCustomerAppoint","ConfirmDialog","Dialog","close","DialogTitle","DialogContent","DialogActions","init","sendconfEmail","e","preventDefault","confParams","to_name","toString","from_name","emailjs","send","text","sendFailedEmail","failedParams","table","minWidth","container","flex","padding","head","palette","common","black","white","button","float","Customers","setCustomers","customersMorn","setCustomersMorn","customersAfter","setCustomersAfter","customersUser","setCustomersUser","loading","setLoading","setOpen","conOpen","setConOpen","subOpen","setSubOpen","doneOpen","setDoneOpen","formMode","allReserveMorn","setAllReserveMorn","custId","setName","setPhone","setEmail","setDate","setTime","setStatus","alignment","setAlignment","getlist","list","listMorn","length","listAfter","toast","getlistUser","getCustomersUser","listUser","getSubmitUser","addCustomerHandler","map","custUser","updateCustomerUser","res","update","deleteHistory","cust","docu","useEffect","CustomerDialog","fullWidth","maxWidth","Grid","item","xs","sm","md","fontSize","icon","Close","ConfirmDelete","onSubmit","ConfirmSubmit","pading","TableContainer","component","Paper","alignContent","ToggleButtonGroup","value","exclusive","onChange","newAlignment","ToggleButton","window","location","reload","IconButton","marginRight","Delete","Table","alignSelf","TableHead","TableRow","TableCell","TableBody","colSpan","css","size","formmode","changeName","target","changePhone","changeEmail","changePlace","changeTime","changeStatus","addCustomer","onSub","History","setAllReserveAfter","allList","deleteHandler","success","deleteHandlerUser","deleteCustomerUser","List","sessionStorage","histoDate","confirmClick","ListItem","disablePadding","ListItemButton","ListItemText","primary","descendingComparator","b","getComparator","order","stableSort","comparator","stabilizedThis","el","index","sort","headCells","numeric","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","checked","inputProps","headCell","align","textAlign","EnhancedTableToolbar","sx","pl","pr","bgcolor","alpha","main","action","activatedOpacity","Tooltip","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleClick","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","override","Box","mb","newSelecteds","n","property","row","isItemSelected","labelId","hover","role","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","control","Switch","allReserveAfter","AppointDone","customersApp","setCustomersApp","setFormMode","allReserve","setAllReserve","setCustId","setSsn","setPlace","setDetail","setBirth","listApp","getOneCustomer","changeSsn","changeDate","changeDetail","EditDefault","baseURL","toggleCalendar","setToggleCalendar","weekends","enableWeekends","userMaxCap","setUserCap","morningStartTime","setMorningStartTime","morningEndTime","setMorningEndTime","eveningStartTime","setEveningStartTime","eveningEndTime","setEveningEndTime","confirmSettings","setConfirmSettings","ConfirmClick","options","method","url","headers","settings","daysOfWeek","startTime","endTime","axios","patch","store","addNotification","insert","animationIn","animationOut","dismiss","duration","onScreen","sendSettings","Container","marginBottom","TextField","defaultValue","InputLabelProps","shrink","step","evt","required","RadioGroup","Radio","confirmAlert","childrenElement","buttons","closeOnEscape","closeOnClickOutside","customUI","paddingTop","Errorpage","boxShadow","Routers","exact","path","AppointDoneAfter","App","isUserSignedIn","setIsUserSignedIn","onAuthStateChanged","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2009e306.chunk.js","sourcesContent":["import firebase from 'firebase/compat'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export {firebase};","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Fade from '@mui/material/Fade';\r\nimport MenuSharpIcon from '@mui/icons-material/MenuSharp';\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Bolt } from \"@mui/icons-material\";\r\n\r\nconst NavBar = (props) => {\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const signOut = () => {\r\n        firebase.auth().signOut();\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.menubackgroud}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" className={classes.title} style={{fontWeight:'bold'}}>\r\n                        KKUL Admin\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                            <Button\r\n                                id=\"fade-button\"\r\n                                aria-controls=\"fade-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                onClick={handleMenu}\r\n                                style={{color:'white'}}\r\n                            >\r\n                                <MenuSharpIcon/>\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"fade-menu\"\r\n                                MenuListProps={{\r\n                                'aria-labelledby': 'fade-button',\r\n                                }}\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                TransitionComponent={Fade}\r\n                            >\r\n                                <MenuItem onClick={handleClose}><Link to=\"/admin\">รอการตรวจสอบ</Link></MenuItem>\r\n                                <MenuItem onClick={handleClose}><Link to=\"/history\">ประวัติการจอง</Link></MenuItem>\r\n                                <MenuItem onClick={handleClose}><Link to=\"/edit_default\">แก้ไขการจอง</Link></MenuItem>\r\n                                <MenuItem onClick={() => signOut()}><Link to=\"/\">ออกจากระบบ</Link></MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n    },\r\n    menubackgroud: {\r\n        background: 'linear-gradient(45deg, #a73b23 30%, #752819 90%)',\r\n        \r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nexport default NavBar;","import firebase from 'firebase/compat';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCevvv7f0Y4MB1CPmPS9YObfO345q9Cpt4\",\r\n    authDomain: \"reactlogin-24c53.firebaseapp.com\",\r\n    projectId: \"reactlogin-24c53\",\r\n    storageBucket: \"reactlogin-24c53.appspot.com\",\r\n    messagingSenderId: \"688572760293\",\r\n    appId: \"1:688572760293:web:c3659ad0a8a7f397a8540c\"\r\n};\r\n    \r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default fire;","import React, { useState } from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, FormControlLabel,\r\n    Button, Checkbox, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport { LockRounded } from '@material-ui/icons';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/db';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport {ScaleLoader} from 'react-spinners';\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberme, setRememberMe] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const override = `\r\n        display: block;\r\n        margin-left: 100px;\r\n        border-color: red;\r\n    `;\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleCheck = (event) => {\r\n        setRememberMe(event.target.checked);\r\n    }\r\n    const handlerLogin = () => {\r\n        setLoading(true);\r\n        fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                const {user} =  response;\r\n                const data = {\r\n                    userId: user.uid,\r\n                    email: user.email\r\n                }\r\n                var users = fire.firestore().collection(\"users\").doc(user.uid);\r\n                users.set({\r\n                    email: user.email,\r\n                    id: user.uid\r\n                })\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n                const storage = localStorage.getItem('user');\r\n                const loggedInUser = storage !== null ? JSON.parse(storage) : null;\r\n                props.loggedIn(loggedInUser);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                toast.error(error.message);\r\n                setLoading(false);\r\n            });\r\n}\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer/>\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign In\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handlerLogin}\r\n                            onError={errors => {\r\n                                for (const err of errors) {\r\n                                    console.log(err.props.errorMessages[0])\r\n                                }\r\n                            }}\r\n\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off' />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value={rememberme} onChange={(e) => handleCheck(e)} color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            {loading ? (\r\n                                <ScaleLoader\r\n                                css={override}\r\n                                size={150}\r\n                                color={\"#eb4034\"}\r\n                                loading={loading}/>\r\n                            ) : (\r\n                                    <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                Sign In\r\n                            </Button>\r\n                            )}\r\n                            \r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%'\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}));\r\n\r\nexport default Login;","import React, {useEffect, useState} from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, \r\n    Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport {LockRounded} from '@material-ui/icons';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport fire from '../helpers/db';\r\nimport firebase from '../helpers/db';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleConfirmPassowerd = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    \r\n    const handleSignUp = () => {\r\n        fire.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                if(response) {\r\n                    props.toggle();\r\n                    toast.success('User Registered Successfully');                    \r\n                }\r\n            }).catch((error) => {\r\n                switch (error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        toast.error(error.message);\r\n                        break;\r\n                    case 'auth/invalid-email': \r\n                        toast.error(error.message);                    \r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        toast.error(error.message);\r\n                        break;\r\n                }\r\n            });      \r\n    }\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if(value !== password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        }\r\n    }, [password])\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handleSignUp}\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off'\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <br />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm password\"\r\n                                fullWidth\r\n                                onChange={handleConfirmPassowerd}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                        {\"Already have an account? Sign In\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        '@media(minWidth: 568px)' : {\r\n        },\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#3F838C'\r\n    },\r\n    form: {\r\n        '@media(minWidth: 568px)' : {\r\n            width: '50%',\r\n        },\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: 'linear-gradient(45deg, #3F838C 30%, #99DFB2 90%)',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}))\r\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/kkulogo.cb762e90.png\";","import React from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport { Typography } from 'antd';\r\nimport kkulogo from '../images/kkulogo.png';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nconst SignIn = (props) => {\r\n  const SignInWithFirebase = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            const token = result.credential.accessToken;\r\n            const user = result.user;\r\n            const data = {\r\n                storetoken: token,\r\n                username: user.displayName,\r\n                email: user.email,\r\n                imageurl: user.photoURL,\r\n                userId: user.uid\r\n            }\r\n            var users = firebase.firestore().collection(\"users\").doc(user.email);\r\n                users.set({\r\n                    email: user.email,\r\n            })\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            props.signin(data);\r\n        }).catch((error) => {\r\n            const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = error.credential;\r\n          console.log(errorMessage);\r\n        });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginLogoContainer\">\r\n          <img className=\"loginlogo\" src={kkulogo} alt=\"kkulogo\"/>\r\n        </div>\r\n        <div className=\"loginTitleContainer\">\r\n          <Title>สำนักหอสมุด <br></br> มหาวิทยาลัยขอนแก่น</Title>\r\n        </div>\r\n        <div \r\n            style={{\r\n              width: \"95%\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n        >\r\n          <Link to=\"/admin\">\r\n        <button\r\n          type=\"primary\"\r\n          style={{\r\n            background: \"#a73b23\", \r\n            color:'#FFFAFA',\r\n            border: \"none\",\r\n            width: \"95%\",\r\n            borderRadius: \"20px\",\r\n            height: '50px',\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={SignInWithFirebase}\r\n        >\r\n          Login using kkumail\r\n        </button>\r\n        </Link>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","class Customer {\r\n    constructor(id, name, bdate, ssn, phone, email, place, date, time, detail, status){\r\n        this.id = id;\r\n        this.name = name\r\n        this.bdate = bdate;\r\n        this.ssn = ssn;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.place = place;\r\n        this.date = date;\r\n        this.time = time;\r\n        this.detail = detail;\r\n        this.status = status\r\n    }\r\n}\r\n\r\nexport default Customer;","import { firebase } from \"../Firebase/firebase\";\r\nimport Customer from '../models/customer';\r\nimport email from '../screens/Customer';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport const getCustomersAdmin = async () => {\r\n    try {\r\n        const response = await firestore.collection('appointment').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getAdminMorning = async () => {\r\n    try {\r\n        const response = await firestore.collection('appoint-morning').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getAdminAfter = async () => {\r\n    try {\r\n        const response = await firestore.collection('appoint-afternoon').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersAppoint = async () => {\r\n    try {\r\n        const response = await firestore.collection('checkout-morning').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersAppointAfter = async () => {\r\n    try {\r\n        const response = await firestore.collection('checkout-afternoon').orderBy('time');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const getCustomersUser = async () => {\r\n    try {\r\n        const response = await firestore.collection('users/' + 'chatchai_aunjai@kkumail.com' + '/custo');\r\n        const data = await response.get();\r\n        let array = [];\r\n        data.forEach(doc => {\r\n            const customer = new Customer(\r\n                doc.id,\r\n                doc.data().name,\r\n                doc.data().bdate,\r\n                doc.data().ssn,\r\n                doc.data().phone,\r\n                doc.data().email,\r\n                doc.data().place,\r\n                doc.data().date,\r\n                doc.data().time,\r\n                doc.data().detail,\r\n                doc.data().status\r\n            );\r\n            array.push(customer);\r\n        });\r\n        return array;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport const addCustomer = async (customer) => {\r\n    try {\r\n        await firestore.collection('appointment').doc().set(customer);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addCustomerAppoint = async (appointment) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc().set(appointment);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCustomer = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const getCustomerApp = async (id) => {\r\n    try {\r\n        const customer = await firestore.collection('checkout-morning').doc(id);\r\n        const data = await customer.get();\r\n        return data.data();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateCustomerAdmin = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('appointment').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const updateCustomerUser = async (id, data) => {\r\n    try {\r\n        const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n        await customer.update(data);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAdmin = async (id) => {\r\n    try {\r\n        await firestore.collection('appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerUser = async (id) => {\r\n    try {\r\n        await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerMorn = async (id) => {\r\n    try {\r\n        await firestore.collection('appoint-morning').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAfter = async (id) => {\r\n    try {\r\n        await firestore.collection('appoint-afternoon').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport const deleteCustomerAppoint= async (id) => {\r\n    try {\r\n        await firestore.collection('complete-appointment').doc(id).delete();\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Button,} from '@material-ui/core';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nexport const ConfirmDialog = (props) => {\r\n    return (\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={props.close}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle>Submit Done!</DialogTitle>\r\n            <ValidatorForm>\r\n                <DialogContent>\r\n                    Send email confirm to user already!\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.close} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </ValidatorForm>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ConfirmDialog;","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\n// npm install emailjs-com\r\n// invoke in onClick ex.: onClick={sendconfEmail}\r\nexport const sendconfEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var confParams = {\r\n        to_name: name.toString(),\r\n        from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n        email: email.toString()\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_88jjem7', confParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import{ init } from 'emailjs-com';\r\nimport emailjs from 'emailjs-com';\r\n// npm install emailjs-com\r\n// invoke in onClick\r\ninit(\"user_5ZCFqcLFXuPKqlVx03Cus\");\r\nexport const sendFailedEmail = (e, name, email) => {\r\n    e.preventDefault();\r\n    var failedParams = {\r\n      to_name: name.toString(),\r\n      from_name: 'หน่วยบริการปฐมภูมิ123 มหาวิทยาลัยขอนแก่น',\r\n      email: email.toString(),\r\n      message: 'วันเวลาที่ท่านเลือกมีการจองคิวเต็มแล้ว โปรดเลือกวันเวลาในการจองใหม่อีกครั้ง ขออภัยในความไม่สะดวก',\r\n      };\r\n    emailjs.send('service_zn0xihe', 'template_y6otxwp', failedParams, 'user_5ZCFqcLFXuPKqlVx03Cus')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getCustomersAdmin, getAdminMorning, deleteCustomerMorn, deleteCustomerAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint, getAdminAfter } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const list = await getCustomersAdmin();\r\n            setCustomers(list);\r\n            const listMorn = await getAdminMorning();\r\n            setCustomersMorn(listMorn);\r\n            setAllReserveMorn(listMorn.length);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setStatus(response.status);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteHistory = async () => {\r\n        try {\r\n            customersMorn.map((cust) => {\r\n                deleteCustomerMorn(cust.id);\r\n            });\r\n            customersAfter.map((cust) => {\r\n                deleteCustomerAfter(cust.id);\r\n            });\r\n            const response = await firestore.collection('users');\r\n            const data = await response.get();\r\n            data.forEach( async (doc) => {\r\n                const res = await firestore.collection('users/' + doc.id.toString() + '/custo');\r\n                const dat = await res.get();\r\n                dat.forEach( async (docu) => {\r\n                    await firestore.collection('users/' + doc.id.toString() + '/custo').doc(docu.id).delete();\r\n                });\r\n                await firestore.collection('users').doc(doc.id.toString()).delete();\r\n            });\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const confirmDelete = () => {\r\n        setConOpen(true);\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        ยืนยันเพื่อทำการลบข้อมูลทั้งหมด\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHistory()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Submit</DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to submit\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => addCustomerHandler(e)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            คิวทั้งหมด {allReserveMorn}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <ToggleButton value=\"true\" onClick={() => refreshPage()}>ช่วงเช้า</ToggleButton>\r\n                <Link to=\"/admin/afternoon\"><ToggleButton value=\"false\">ช่วงบ่าย</ToggleButton></Link>\r\n                </ToggleButtonGroup>\r\n                <IconButton onClick={() => confirmDelete()} color=\"secondary\" aria-label=\"update customer\" style={{float:'right', marginRight:'50px'}}>\r\n                    <Delete />\r\n                </IconButton>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersMorn.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersMorn.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#DC143C'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default Customers;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getCustomersAdmin, getAdminMorning, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\n\r\n\r\n\r\nconst History = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [allReserveAfter, setAllReserveAfter] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const list = await getCustomersAdmin();\r\n            setCustomers(list);\r\n            const listMorn = await getCustomersUser();\r\n            setCustomersMorn(listMorn);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveMorn(listMorn.length);\r\n            const allList = listMorn.length - 2; \r\n            setAllReserveAfter(allList);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('history').orderBy('date');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach( async (doc) => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(doc.id);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setStatus(response.status);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const confirmClick = (cust) => {\r\n        sessionStorage.setItem(\"histoDate\", cust);\r\n        console.log(sessionStorage.histoDate.toString())\r\n      };\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHandler(e, custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Submit</DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to submit\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => addCustomerHandler(e)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ประวัติการจองทั้งหมด {allReserveMorn} วัน\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head} style={{fontSize:'20px', fontWeight:'bolder'}}>Choose date</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersMorn.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersMorn.map((cust) => (\r\n                                          <nav aria-label=\"secondary mailbox folders\">\r\n                                          <Link to=\"/history/date\"><List onClick={()=>{confirmClick(cust)}}>\r\n                                            <ListItem disablePadding>\r\n                                            <ListItemButton>\r\n                                                <ListItemText primary={cust} />\r\n                                              </ListItemButton>\r\n                                            </ListItem>\r\n                                          </List></Link>\r\n                                        </nav>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default History;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport Customer from \"../models/customer\";\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { getCustomersAdmin, getAdminMorning, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'Name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'Phone',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Phone',\r\n  },\r\n  {\r\n    id: 'Date',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Date',\r\n  },\r\n  {\r\n    id: 'Time',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Time',\r\n  },\r\n  {\r\n    id: 'Status',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Status',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n};\r\n\r\n  return (\r\n    <TableHead style={{backgroundColor:'#C0C0C0'}}>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            style={{textAlign: 'left', fontSize:'15px', fontWeight:'bold'}}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n          style={{fontWeight:'bolder'}}\r\n        >\r\n          Date\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customersMorn, setCustomersMorn] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [allReserveMorn, setAllReserveMorn] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n      getlist();\r\n  }, []);\r\n\r\n  const getCustomersUser = async () => {\r\n      try {\r\n          const response = await firestore.collection('history/' + sessionStorage.histoDate.toString() + '/custo').orderBy('time');\r\n          const data = await response.get();\r\n          let array = [];\r\n          data.forEach(doc => {\r\n              const customer = new Customer(\r\n                  doc.id,\r\n                  doc.data().name,\r\n                  doc.data().bdate,\r\n                  doc.data().ssn,\r\n                  doc.data().phone,\r\n                  doc.data().email,\r\n                  doc.data().place,\r\n                  doc.data().date,\r\n                  doc.data().time,\r\n                  doc.data().detail,\r\n                  doc.data().status\r\n              );\r\n              array.push(customer);\r\n          });\r\n          return array;\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n  const getlist = async () => {\r\n      try {\r\n          setLoading(true);\r\n          const listMorn = await getCustomersUser();\r\n          setCustomersMorn(listMorn);\r\n          setAllReserveMorn(listMorn.length);\r\n          setLoading(false);\r\n      } catch (error) {\r\n          toast.error(error.message);\r\n          setLoading(false);\r\n      }\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = customersMorn.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - customersMorn.length) : 0;\r\n\r\nconst override = `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;    \r\n    border-color: red;\r\n`;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={customersMorn.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(customersMorn, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    customersMorn.length === 0 ? (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                          <ScaleLoader\r\n                            css={override}\r\n                            size={150}\r\n                            color={\"#eb4034\"}\r\n                            loading={loading} />\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    ) : (\r\n                    <>\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.phone}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.date}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.time}</TableCell>\r\n                      <TableCell align=\"right\" style={{textAlign:'left'}}>{row.status}</TableCell>\r\n                    </TableRow>\r\n                    </>\r\n                  )\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6}>\r\n                  <ScaleLoader\r\n                        css={override}\r\n                        size={150}\r\n                        color={\"#eb4034\"}\r\n                        loading={loading} />\r\n                </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={customersMorn.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"\"\r\n      />\r\n    </Box>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\nimport { getAdminMorning, deleteCustomerMorn, deleteCustomerAfter, getAdminAfter, getCustomer, deleteCustomerAdmin, addCustomerAppoint } from '../data/customerData';\r\nimport {ConfirmDialog} from './ConfirmDialog';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Customer from \"../models/customer\";\r\nimport {sendconfEmail} from '../sendEmail/sendEmail'\r\nimport {sendFailedEmail} from '../sendEmail/sendFailedEmail'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customersMorn, setCustomersMorn] = useState([]);\r\n    const [customersAfter, setCustomersAfter] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const [doneOpen, setDoneOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserveMorn, setAllReserveMorn] = useState('');\r\n    const [allReserveAfter, setAllReserveAfter] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"false\");\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n        setSubOpen(false)\r\n    }\r\n    const handleDoneClose = () => setDoneOpen(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    const refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listMorn = await getAdminMorning();\r\n            setCustomersMorn(listMorn);\r\n            setAllReserveMorn(listMorn.length);\r\n            const listAfter = await getAdminAfter();\r\n            setCustomersAfter(listAfter);\r\n            setAllReserveAfter(listAfter.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getSubmitUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setSubOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomer(id);\r\n            setName(response.name);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setStatus(response.status);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (e, id) => {\r\n        try {\r\n            await deleteCustomerAdmin(id);\r\n            sendFailedEmail(e, name, email)\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const addCustomerHandler = async (e) => {\r\n        try {\r\n            let status = \"ตรวจสอบแล้ว\";\r\n            const customer = {\r\n                name,\r\n                phone,\r\n                email,\r\n                date,\r\n                time,\r\n                status\r\n            }\r\n            customersUser.map((custUser) => \r\n            updateCustomerUser(custUser.id, customer));\r\n            await addCustomerAppoint(customer);\r\n            setOpen(false);\r\n            setSubOpen(false);\r\n            setDoneOpen(true);\r\n            sendconfEmail(e, name, email);\r\n            deleteCustomerAdmin(custId);\r\n            getlist();\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setDate('');\r\n            setTime('');\r\n            setStatus('');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const updateCustomerUser = async (id, data) => {\r\n        try {\r\n            const res = await getCustomer(custId);\r\n            setEmail(res.email);\r\n            const customer = await firestore.collection('users/' + email.toString() + '/custo').doc(id);\r\n            await customer.update(data);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const deleteHistory = async () => {\r\n        try {\r\n            customersMorn.map((cust) => {\r\n                deleteCustomerMorn(cust.id);\r\n            });\r\n            customersAfter.map((cust) => {\r\n                deleteCustomerAfter(cust.id);\r\n            });\r\n            const response = await firestore.collection('users');\r\n            const data = await response.get();\r\n            data.forEach( async (doc) => {\r\n                const res = await firestore.collection('users/' + doc.id.toString() + '/custo');\r\n                const dat = await res.get();\r\n                dat.forEach( async (docu) => {\r\n                    await firestore.collection('users/' + doc.id.toString() + '/custo').doc(docu.id).delete();\r\n                });\r\n                await firestore.collection('users').doc(doc.id.toString()).delete();\r\n            });\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const confirmDelete = () => {\r\n        setConOpen(true);\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง (กรุณาทำการยืนยันคิว)</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"\" style={{fontWeight:'bold'}} onClick={() =>  getSubmitUser()}>\r\n                           Submit\r\n                        </Button>\r\n                        <Button color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Cancel\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        ยืนยันเพื่อทำการลบข้อมูลทั้งหมด\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => deleteHistory()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n      const ConfirmSubmit = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Submit</DialogTitle>\r\n                <ValidatorForm\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to submit\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={(e) => addCustomerHandler(e)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            คิวทั้งหมด {allReserveAfter}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <Link to=\"/admin\"><ToggleButton value=\"true\">ช่วงเช้า</ToggleButton></Link>\r\n                <ToggleButton value=\"false\" onClick={() => refreshPage()}>ช่วงบ่าย</ToggleButton>\r\n                {console.log(alignment)}\r\n                </ToggleButtonGroup>\r\n                <IconButton onClick={() => confirmDelete()} color=\"secondary\" aria-label=\"update customer\" style={{float:'right', marginRight:'50px'}}>\r\n                    <Delete />\r\n                </IconButton>\r\n                <Table className={classes.table} style={{width:'100%', alignSelf:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersAfter.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersAfter.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#DC143C'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                phone={phone}\r\n                email={email}\r\n                date={date}\r\n                time={time}\r\n                status={status}\r\n                changeName={handleName}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeTime={handleTime}\r\n                changeStatus={handleStatus}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                onSub={ConfirmSubmit}\r\n            />\r\n            <ConfirmSubmit\r\n                open={subOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                addCustomer={addCustomerHandler}\r\n            />\r\n             <ConfirmDialog\r\n                open={doneOpen}\r\n                close={handleDoneClose}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default Customers;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { deleteCustomerAppoint, getCustomersAppoint, getCustomerApp } from '../data/customerData';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Customer from \"../models/customer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst AppointDone = () => {\r\n    const classes = useStyles();\r\n    const [customersApp, setCustomersApp] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n    }\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listApp = await getCustomersAppoint();\r\n            setCustomersApp(listApp);\r\n            setAllReserve(listApp.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomerApp(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n            await deleteCustomerAppoint(id);\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  deleteHandler(custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ตรวจสอบคิวเสร็จสิ้นทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <ToggleButton value=\"true\">ช่วงเช้า</ToggleButton>\r\n                <Link to=\"/appointment/afternoon\"><ToggleButton value=\"false\">ช่วงบ่าย</ToggleButton></Link>\r\n                </ToggleButtonGroup>\r\n                <Table className={classes.table} style={{width:'100%', alignContent:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersApp.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersApp.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#00008B'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                listUser={getlistUser}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default AppointDone;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport \"../App.css\";\r\nimport {\r\n    Table, TableBody, TableCell, TableRow, TableHead,\r\n    TableContainer, Paper, makeStyles, Container,\r\n    Typography, Button, Grid, IconButton\r\n} from '@material-ui/core';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { deleteCustomerAppoint, getCustomersAppointAfter, getCustomerApp } from '../data/customerData';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Customer from \"../models/customer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nconst firestore = firebase.firestore();\r\nconst AppointDone = () => {\r\n    const classes = useStyles();\r\n    const [customersApp, setCustomersApp] = useState([]);\r\n    const [customersUser, setCustomersUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [conOpen, setConOpen] = useState(false);\r\n    const [formMode, setFormMode] = useState(true);\r\n    const [allReserve, setAllReserve] = useState('');\r\n    const [custId, setCustId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [ssn, setSsn] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [bdate, setBirth] = useState('');\r\n    const [alignment, setAlignment] = React.useState(\"true\");\r\n    const override = `\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;    \r\n        border-color: red;\r\n    `;\r\n    const handleChange = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setConOpen(false);\r\n    }\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleSsn = (event) => {\r\n        setSsn(event.target.value);\r\n    }\r\n    const handlePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handlePlace = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handleDate = (event) => {\r\n        setPlace(event.target.value);\r\n    }\r\n    const handleTime = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const handleEmail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleDetail = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n    \r\n    const getlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const listApp = await getCustomersAppointAfter();\r\n            setCustomersApp(listApp);\r\n            setAllReserve(listApp.length);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getlistUser = async () => {\r\n        try {\r\n            const listUser = await getCustomersUser();\r\n            setCustomersUser(listUser);\r\n            setConOpen(true)\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const getCustomersUser = async () => {\r\n        try {\r\n            const response = await firestore.collection('users/' + email.toString() + '/custo');\r\n            const data = await response.get();\r\n            let array = [];\r\n            data.forEach(doc => {\r\n                const customer = new Customer(\r\n                    doc.id,\r\n                    doc.data().name,\r\n                    doc.data().bdate,\r\n                    doc.data().ssn,\r\n                    doc.data().phone,\r\n                    doc.data().email,\r\n                    doc.data().place,\r\n                    doc.data().date,\r\n                    doc.data().time,\r\n                    doc.data().detail,\r\n                    doc.data().status\r\n                );\r\n                array.push(customer);\r\n            });\r\n            return array;\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    const getOneCustomer = async (id) => {\r\n        try {\r\n            setFormMode(false);\r\n            setCustId(id);\r\n            const response = await getCustomerApp(id);\r\n            setName(response.name);\r\n            setSsn(response.ssn);\r\n            setPhone(response.phone);\r\n            setEmail(response.email);\r\n            setPlace(response.place);\r\n            setDate(response.date);\r\n            setTime(response.time);\r\n            setDetail(response.detail);\r\n            setStatus(response.status);\r\n            setBirth(response.bdate);\r\n            setOpen(true);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n            await deleteCustomerAppoint(id);\r\n            setConOpen(false);\r\n            getlist();\r\n            toast.success('Customer Deleted Successfully');\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteHandlerUser = async (id) => {\r\n        try {\r\n            await deleteCustomerUser(id);\r\n            setConOpen(false);\r\n            getlist();\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const deleteCustomerUser = async (id) => {\r\n        try {\r\n            await firestore.collection('users/' + email.toString() + '/custo').doc(id).delete();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n    }, []);\r\n\r\n    const CustomerDialog = (props) => {\r\n        return (\r\n            <Dialog\r\n            fullWidth={true}\r\n            maxWidth='lg'\r\n            open={props.open}\r\n            aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle>ข้อมูลผู้จอง</DialogTitle>\r\n                <ValidatorForm>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>ชื่อ : <span style={{color:'#3F838C'}}>{props.name}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เลขบัตรประชาชน : <span style={{color:'#3F838C'}}>{props.ssn}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เบอร์โทร : <span style={{color:'#3F838C'}}>{props.phone}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อีเมล : <span style={{color:'#3F838C'}}>{props.email}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>สถานที่ : <span style={{color:'#3F838C'}}>{props.place}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>วันที่จอง : <span style={{color:'#3F838C'}}>{props.date}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>เวลาจอง : <span style={{color:'#3F838C'}}>{props.time}</span></p>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10} md={6}>\r\n                                <p style={{fontSize:20}}>อาการเบื้องต้น : <span style={{color:'#3F838C'}}>{props.detail}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  getlistUser()}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button icon={Close} onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    const ConfirmDelete = (props) => {\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={props.close}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <ValidatorForm\r\n                    onSubmit={props.close}\r\n                >\r\n                    <DialogContent>\r\n                        Confirm to delete\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={() =>  deleteHandler(custId) && (customersUser.map((custUser) => deleteHandlerUser(custUser.id)))}>\r\n                           Delete\r\n                        </Button>\r\n                        <Button onClick={props.close} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog>\r\n        );\r\n      };\r\n\r\n    return (\r\n            <Grid style={{width:'100%', display:'block', pading:'20px'}}>\r\n            <TableContainer component={Paper} style={{width:'100%', display:'block', alignContent:'center'}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                            ตรวจสอบคิวเสร็จสิ้นทั้งหมด {allReserve}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={alignment}\r\n                exclusive\r\n                onChange={handleChange}\r\n                >\r\n                <Link to=\"/appointment\"><ToggleButton value=\"true\">ช่วงเช้า</ToggleButton></Link>\r\n                <ToggleButton value=\"false\">ช่วงบ่าย</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Table className={classes.table} style={{width:'100%', alignContent:'center'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>Name</TableCell>\r\n                            <TableCell className={classes.head}>Phone</TableCell>\r\n                            <TableCell className={classes.head}>Date</TableCell>\r\n                            <TableCell className={classes.head}>Time</TableCell>\r\n                            <TableCell className={classes.head}>Status</TableCell>\r\n                            <TableCell className={classes.head}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {customersApp.length === 0 ? (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <ScaleLoader\r\n                                        css={override}\r\n                                        size={150}\r\n                                        color={\"#eb4034\"}\r\n                                        loading={loading} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (\r\n                            <>\r\n                                {customersApp.map((cust) => (\r\n                                    <TableRow key={cust.id}>\r\n                                        <TableCell>{cust.name}</TableCell>\r\n                                        <TableCell>{cust.phone}</TableCell>\r\n                                        <TableCell>{cust.date}</TableCell>\r\n                                        <TableCell>{cust.time}</TableCell>\r\n                                        <TableCell style={{color:'#00008B'}}>{cust.status}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => getOneCustomer(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n                <CustomerDialog\r\n                open={open}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                name={name}\r\n                ssn={ssn}\r\n                phone={phone}\r\n                email={email}\r\n                place={place}\r\n                date={date}\r\n                time={time}\r\n                detail={detail}\r\n                status={status}\r\n                bdate={bdate}\r\n                changeName={handleName}\r\n                changeSsn={handleSsn}\r\n                changePhone={handlePhone}\r\n                changeEmail={handleEmail}\r\n                changePlace={handlePlace}\r\n                changeDate={handleDate}\r\n                changeTime={handleTime}\r\n                changeDetail={handleDetail}\r\n                changeStatus={handleStatus}\r\n            />\r\n            <ConfirmDelete\r\n                open={conOpen}\r\n                close={handleClose}\r\n                formmode={formMode}\r\n                listUser={getlistUser}\r\n            />\r\n            </TableContainer>\r\n            </Grid>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n        ['@media (min-width:320px)']: { \r\n            width: '100%'\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '40px',\r\n    },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        padding: '20px'\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'right',\r\n    },\r\n}));\r\nexport default AppointDone;","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../Firebase/firebase\";\r\nimport axios from 'axios';\r\nimport \"../App.css\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport '../assets/css/confirm.css'\r\nimport { store } from \"react-notifications-component\";;\r\nconst EditDefault = () => {\r\n  const classes = useStyles();\r\n  // variables\r\n  const defaultMaxCap = 240;\r\n  const defaultMorningStartTime = \"09:00\";\r\n  const defaultMorningEndTime = \"12:00\";\r\n  const defaultEveningStartTime = \"13:30\";\r\n  const defaultEveningEndTime = \"16:30\";\r\n  const baseURL = \"https://kkulib-testapi.herokuapp.com/settings\";\r\n  // useState\r\n  const [toggleCalendar, setToggleCalendar] = useState(true);\r\n  const [weekends, enableWeekends] = useState(false);\r\n  const [userMaxCap, setUserCap] = useState(defaultMaxCap);\r\n  const [morningStartTime, setMorningStartTime] = useState(\r\n    defaultMorningStartTime\r\n  );\r\n  const [morningEndTime, setMorningEndTime] = useState(defaultMorningEndTime);\r\n  const [eveningStartTime, setEveningStartTime] = useState(\r\n    defaultEveningStartTime\r\n  );\r\n  const [eveningEndTime, setEveningEndTime] = useState(defaultEveningEndTime);\r\n  const [confirmSettings, setConfirmSettings] = useState(false);\r\n  // functions\r\n  const setMornStart = (evt) => {\r\n    setMorningStartTime(evt.target.value);\r\n  };\r\n  const setMornEnd = (evt) => {\r\n    setMorningEndTime(evt.target.value);\r\n  };\r\n  const setEveningStart = (evt) => {\r\n    setEveningStartTime(evt.target.value);\r\n  };\r\n  const setEveningEnd = (evt) => {\r\n    setEveningEndTime(evt.target.value);\r\n  };\r\n  const toggleCalendarOn = () => {\r\n    setToggleCalendar(\"true\");\r\n  };\r\n  const toggleCalendarOff = () => {\r\n    setToggleCalendar(\"false\");\r\n  };\r\n  const toggleWeekendsOn = () => {\r\n    enableWeekends(\"true\");\r\n  };\r\n  const toggleWeekendsOff = () => {\r\n    enableWeekends(\"false\");\r\n  };\r\n  const setMaxCap = (evt) => {\r\n    setUserCap(evt.target.value ? evt.target.value : 240);\r\n  };\r\n  const ConfirmClick = () => {\r\n    setConfirmSettings(true)\r\n  };\r\n  \r\n  // useEffect\r\n  useEffect(() => {\r\n    if(confirmSettings === true){\r\n      console.log(\"user capacity : \" + userMaxCap);\r\n      console.log(\"toggle calendar : \" + toggleCalendar);\r\n      console.log(\"weekend state is \" + weekends);\r\n      console.log(\"Morning start : \" + morningStartTime);\r\n      console.log(\"Morning end : \" + morningEndTime);\r\n      console.log(\"Evening start : \" + eveningStartTime);\r\n      console.log(\"Evening end : \" + eveningEndTime);\r\n      const sendSettings = async () =>{\r\n        const options = {\r\n          method: 'patch',\r\n          url: baseURL,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n        var settings = {\r\n          \"maxUser\": userMaxCap,\r\n          \"selectable\" : toggleCalendar,\r\n          \"weekends\": weekends,\r\n          \"businessHours\": [\r\n            {\r\n              daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\r\n              startTime: morningStartTime,\r\n              endTime: morningEndTime,\r\n            },\r\n            {\r\n              daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\r\n              startTime: eveningStartTime,\r\n              endTime: eveningEndTime,\r\n            },\r\n          ],\r\n        }\r\n        await axios.patch(baseURL, settings, options)\r\n        .then((response) => {\r\n          if(response.status === 200){\r\n            store.addNotification({\r\n              title: \"สำเร็จ!\",\r\n              message: \"แก้ไขการจองสำเร็จ\",\r\n              type: \"success\",\r\n              insert: \"top\",\r\n              container: \"top-right\",\r\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n              dismiss: {\r\n                duration: 5000,\r\n                onScreen: true\r\n              }\r\n            });\r\n            \r\n          } else {\r\n            store.addNotification({\r\n              title: \"ล้มเหลว!\",\r\n              message: \"ตั้งค่าการจองไม่สำเร็จ\",\r\n              type: \"danger\",\r\n              insert: \"top\",\r\n              container: \"top-right\",\r\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n              dismiss: {\r\n                duration: 5000,\r\n                onScreen: true\r\n              }\r\n            });\r\n          }\r\n        },(error) => {\r\n          store.addNotification({\r\n            title: \"ล้มเหลว!\",\r\n            message: `แก้ไขกาตั้งค่าของการจองไม่สำเร็จ เนื่องจาก ${error}` ,\r\n            type: \"danger\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true\r\n            }\r\n          });\r\n        }\r\n        ) \r\n      }\r\n      sendSettings();\r\n      setConfirmSettings(false);\r\n    } \r\n  }, [\r\n    eveningEndTime,\r\n    eveningStartTime,\r\n    morningEndTime,\r\n    morningStartTime,\r\n    toggleCalendar,\r\n    userMaxCap,\r\n    weekends,\r\n    confirmSettings\r\n  ]);\r\n  return (\r\n    <Grid style={{ width: \"100%\", padding: \"20px\" }}>\r\n      <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n        แก้ไขระเบียบการจอง\r\n      </Typography>\r\n      <Container\r\n        component={Paper}\r\n        style={{ width: \"100%\", display: \"block\", alignContent: \"center\" }}\r\n      >\r\n        <Grid container style={{ width: \"100%\", pading: \"20px\" }}>\r\n          <Grid item xs={8}>\r\n            <p\r\n              style={{ fontSize: 20, marginTop: \"20px\", marginBottom: \"10px\" }}\r\n            >\r\n              เวลาทำการ{\" \"}\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={7} sm={7} md={5}>\r\n            <p style={{ fontSize: 20 }}>\r\n              ช่วงเช้า :{\" \"}\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"เริ่ม\"\r\n                defaultValue=\"09:00\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                style={{ marginRight: \"10px\" }}\r\n                onChange={setMornStart}\r\n              />\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"สิ้นสุด\"\r\n                defaultValue=\"12:00\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                onChange={setMornEnd}\r\n              />\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={7} sm={7} md={5}>\r\n            <p style={{ fontSize: 20 }}>\r\n              ช่วงบ่าย :{\" \"}\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"เริ่ม\"\r\n                defaultValue=\"13:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                style={{ marginRight: \"10px\" }}\r\n                onChange={setEveningStart}\r\n              />\r\n              <TextField\r\n                id=\"time\"\r\n                type=\"time\"\r\n                label=\"สิ้นสุด\"\r\n                defaultValue=\"16:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n                onChange={setEveningEnd}\r\n              />\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={10} sm={10} md={6} style={{ marginTop: \"40px\" }}>\r\n            <p style={{ fontSize: 20 }}>\r\n              จำนวนผู้ใช้งานที่รองรับ :{\" \"}\r\n              <TextField\r\n                required\r\n                onChange={setMaxCap}\r\n                defaultValue=\"240\"\r\n                type=\"number\"\r\n              />\r\n            </p>\r\n            <p style={{ fontSize: 20, marginTop: \"30px\" }}>\r\n              เปิดทำการเสาร์-อาทิตย์ :{\" \"}\r\n              <RadioGroup\r\n              row\r\n              aria-label=\"gender\"\r\n              name=\"row-radio-buttons-group\"\r\n              defaultValue=\"open\"\r\n            >\r\n              <FormControlLabel\r\n                value=\"open\"\r\n                control={<Radio />}\r\n                onClick={toggleWeekendsOn}\r\n                label=\"เปิด\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"close\"\r\n                control={<Radio color=\"secondary\" />}\r\n                onClick={toggleWeekendsOff}\r\n                label=\"ปิด\"\r\n              />\r\n            </RadioGroup>\r\n            </p>\r\n            <p style={{ fontSize: 20, marginTop: \"30px\" }}>ระบบการจอง : </p>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"gender\"\r\n              name=\"row-radio-buttons-group\"\r\n              defaultValue=\"open\"\r\n            >\r\n              <FormControlLabel\r\n                value=\"open\"\r\n                control={<Radio />}\r\n                onClick={toggleCalendarOn}\r\n                label=\"เปิด\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"close\"\r\n                control={<Radio color=\"secondary\" />}\r\n                onClick={toggleCalendarOff}\r\n                label=\"ปิด\"\r\n              />\r\n            </RadioGroup>\r\n            <br />\r\n            <br />\r\n            <div style={{ padding: \"10px\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  confirmAlert({\r\n                    childrenElement: () => <div></div>, // Custom UI or Component\r\n                    buttons: [\r\n                      {\r\n                        label: \"ยกเลิก\",\r\n                      },\r\n                      {\r\n                        label: \"ยืนยัน\",\r\n                        onClick: () => ConfirmClick(),\r\n                      },\r\n                    ],\r\n                    closeOnEscape: true,\r\n                    closeOnClickOutside: true,\r\n                    customUI: ({ onClose }) => {\r\n                      return (\r\n                        <div\r\n                          className=\"custom-ui\"\r\n                          style={{ backgroundColor: \"white\" }}\r\n                        >\r\n                          <h1>ยืนยัน</h1>\r\n                          <p>แก้ไขการตั้งค่าหรือไม่</p>\r\n                          <div\r\n                            className=\"alert-btn-container\"\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              paddingTop: \"5px\",\r\n                              float: \"right\",\r\n                            }}\r\n                          >\r\n                            <div className=\"cancel-btn-ctn\">\r\n                              <button\r\n                                className=\"alert-cancel-btn\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onClose}\r\n                              >\r\n                                ยกเลิก\r\n                              </button>\r\n                            </div>\r\n\r\n                            <button\r\n                              className=\"alert-conf-btn\"\r\n                              onClick={() => {\r\n                                ConfirmClick();\r\n                                onClose();\r\n                              }}\r\n                              style={{ cursor: \"pointer\" }}\r\n                            >\r\n                              ยืนยัน\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                ยืนยัน\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n    [\"@media (min-width:320px)\"]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  container: {\r\n    marginTop: \"40px\",\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    padding: \"20px\",\r\n  },\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nexport default EditDefault;\r\n","export default __webpack_public_path__ + \"static/media/error.9336417a.png\";","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Button } from 'antd';\r\nimport error from '../images/error.png';\r\nimport {\r\n    Link,\r\n   \r\n  } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nconst Errorpage = () => {\r\n    return(\r\n        <Layout id=\"error-layout\"style={{width: 500, height: 300, textAlign: 'center', background: '#f6f6f6', alignItems: 'center', boxShadow: '2px 17px 22px -6px rgba(0,0,0,0.75)', borderRadius:'10px'}}>\r\n            <img src={error} style={{width: 200, textAlign: 'center'}} alt=\"error\"/>\r\n            <Typography style={{}}>The page you requested could not be found</Typography>\r\n            <Layout style={{paddingTop: 10, background: '#f6f6f6'}}>\r\n            <Link to ={'/admin'}><Button  style={{textAlign: 'center', width: 200, height: 20 ,background: \"#a73b23\", color:'#FFFAFA'}}>Go to mainpage</Button></Link>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Errorpage;","import './App.css';\r\nimport NavBar from './layouts/NavBar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './authentication/Login';\r\nimport SignUp from './authentication/SignUp';\r\nimport SignIn from './screens/SignIn'\r\nimport Customers from './screens/Customer';\r\nimport History from './screens/History';\r\nimport HistoryDate from './screens/HistoryDate';\r\nimport CustomersAfter from './screens/CustomerAfter';\r\nimport AppointDone from './screens/AppointDone';\r\nimport AppointDoneAfter from './screens/AppointDoneAfter';\r\nimport EditData from './screens/EditDefault';\r\nimport Errorpage from './screens/Errorpage';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { Layout } from 'antd';\r\nimport { firebase } from \"./Firebase/firebase\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nconst Routers = () => (\r\n  <div>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/admin\">\r\n          <NavBar/>\r\n          <Customers/>  \r\n        </Route>\r\n        <Route exact path=\"/admin/afternoon\">\r\n          <NavBar/>\r\n          <CustomersAfter/>\r\n        </Route>\r\n        <Route exact path=\"/appointment\">\r\n          <NavBar/>\r\n          <AppointDone/>  \r\n        </Route>\r\n        <Route exact path=\"/appointment/afternoon\">\r\n          <NavBar/>\r\n          <AppointDoneAfter/>\r\n        </Route>\r\n        <Route exact path=\"/edit_default\">\r\n          <NavBar/>\r\n          <EditData/>  \r\n        </Route>\r\n        <Route exact path=\"/history\">\r\n          <NavBar/>\r\n          <History/>  \r\n        </Route>\r\n        <Route exact path=\"/history/date\">\r\n          <NavBar/>\r\n          <HistoryDate/>  \r\n        </Route>\r\n        <Route>\r\n          <Errorpage/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState(true);\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if(user) {\r\n      return setIsUserSignedIn(true);\r\n    }\r\n\r\n    setIsUserSignedIn(false)\r\n  })\r\n  if (isUserSignedIn === true){\r\n    return (\r\n      <Router>\r\n      <section className=\"hero\">\r\n        <Layout class=\"mainLayout\">\r\n          <ReactNotification/>\r\n          <Routers/>\r\n        </Layout>\r\n      </section>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SignIn}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}